<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fyx(me) â€“ Openrouter.ai</title><link>https://fyx.me/tags/openrouter.ai/</link><description>Recent content in Openrouter.ai on fyx(me)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://fyx.me/tags/openrouter.ai/index.xml" rel="self" type="application/rss+xml"/><item><title>Leveraging AI to Automate SEO Metadata Generation for Web Content</title><link>https://fyx.me/minis/leveraging-ai-to-automate-seo-metadata-generation-for-web-content/</link><pubDate>Sun, 13 Apr 2025 00:00:00 +0000</pubDate><guid>https://fyx.me/minis/leveraging-ai-to-automate-seo-metadata-generation-for-web-content/</guid><description>
&lt;p>I&amp;rsquo;ve been playing around with AI for the past few weeks, trying to test its limit, bypass security features, check its use cases and see how it can be leverage for every day work (eg. programming, information gathering, research and more). One thing I&amp;rsquo;ve realised is how hard it is to keep up with the insane amount of things that are being created with it, new research dropping constantly and the tools evolving at a rapid pace.&lt;/p>
&lt;p>I&amp;rsquo;ve also wanted to learn more about SEO for a while and use this blog as a playground. This seemed like the perfect use case to try and integrate AI into the deployment workflow for this website and generate SEO components such as page descriptions, post titles and more.&lt;/p>
&lt;h2>Unified interfaces for Large Language Models (LLM API providers)&lt;span class="hx-absolute -hx-mt-20" id="unified-interfaces-for-large-language-models-llm-api-providers">&lt;/span>
&lt;a href="#unified-interfaces-for-large-language-models-llm-api-providers" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>I currently don&amp;rsquo;t have the hardware resources to run large language models locally and since I wanted to learn more about how each model differs from one another, I&amp;rsquo;ve settled on using &lt;a href="https://openrouter.ai/" target="_blank" rel="noopener">openrouter.ai&lt;/a>. They provide an API interface to different model providers and allow you to use 383 different models (at the time of writing), including a number of free models (great for testing).&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="../img/openrouter.ai%20available%20models.webp" title="openrouter.ai Available Models" alt="" loading="lazy" />
&lt;figcaption>openrouter.ai Available Models&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>To use the model via openrouter, you need to an LLM Frontend such as &lt;a href="https://sillytavern.app/" target="_blank" rel="noopener">SillyTavern&lt;/a>, &lt;a href="https://openwebui.com/" target="_blank" rel="noopener">Open WebUI&lt;/a> or &lt;a href="https://www.librechat.ai/" target="_blank" rel="noopener">LibreChat&lt;/a>. There&amp;rsquo;s so many out there but these seem to be the most popular (other than the built-in Web UIs). They all get constantly updated to support the newest bells and whistles like MCP servers and tools, chat history and more.&lt;/p>
&lt;p>However, if you&amp;rsquo;re going to build stuff with AI, you&amp;rsquo;ll need to find a library to integrate models into your code (or build your own). Again, there&amp;rsquo;s so many of them out there and the landscape is changing constantly but a few currently seem to stand out. For this small project, I wanted to try out one of the frameworks that seemed very promising due to the integrations it has, great documentation and strong coding practices, namely I wanted to use &lt;a href="https://github.com/agno-agi/agno" target="_blank" rel="noopener">Agno&lt;/a>. The examples they had really sold me on the framework plus the ability to request &lt;a href="https://docs.agno.com/agents/structured-output" target="_blank" rel="noopener">structured output&lt;/a> which made this extremely easy.&lt;/p>
&lt;p>Using the framework, it took little time to write a program that takes in a file, reads it in, sends the content to an Agent and request it to generate SEO metadata.&lt;/p>
&lt;h2>Using an AI agent to generate SEO optimised metadata&lt;span class="hx-absolute -hx-mt-20" id="using-an-ai-agent-to-generate-seo-optimised-metadata">&lt;/span>
&lt;a href="#using-an-ai-agent-to-generate-seo-optimised-metadata" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>I use Hugo to convert my markdown content into a static website. The pages can contain metadata stored at the top of the page using the &lt;a href="https://gohugo.io/content-management/front-matter/" target="_blank" rel="noopener">front matter&lt;/a> format. This allows us to modify the output &lt;code>title&lt;/code>, &lt;code>description&lt;/code>, &lt;code>tags/keywords&lt;/code> and more. As such, this is what we&amp;rsquo;ll update with this tool before generating out site.&lt;/p>
&lt;p>This was the initial script I used, with really dump prompts, no optimisations, nothing special honestly (I&amp;rsquo;ve even left the comments in to show you how little effort this required):&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="../img/Agno%20SEO%20metadata%20generation%20Python%20tool.webp" title="Python script using Agno to generate SEO metadata" alt="" loading="lazy" />
&lt;figcaption>Python script using Agno to generate SEO metadata&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>This worked surprising well and with some small tweaks, you can see the results:&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="../img/SEO%20tool%20outcome%20simple.webp" title="fieldsgen.py example output" alt="" loading="lazy" />
&lt;figcaption>fieldsgen.py example output&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Depending on the model you&amp;rsquo;re using the inference speed takes more or less time but for such as simple task (as long as you don&amp;rsquo;t use reasoning models), this is fairly quick.&lt;/p>
&lt;p>It&amp;rsquo;s also extremely easy to switch out the models as you can see in the commented out code above. Changing the models produces different outputs and allows you to identify the best model for this sort of task:&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="../img/SEO%20tool%20outcome%20AI%20model%20comparaison.webp" title="fieldsgen.py example output with different Models" alt="" loading="lazy" />
&lt;figcaption>fieldsgen.py example output with different Models&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Sometimes, the models may not cooperate and provide output in the wrong format which causes errors:&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="../img/Agno%20SEO%20tool%20errors.webp" title="fieldsgen.py example error" alt="" loading="lazy" />
&lt;figcaption>fieldsgen.py example error&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Thankfully, by searching the Agno documentation (using their builtin AI search because we&amp;rsquo;re in the theme of AI), we find an easy solution for &lt;a href="https://docs.agno.com/models/introduction#error-handling" target="_blank" rel="noopener">error handling&lt;/a> to retry on failure:&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="../img/Agno%20Documentation%20AI%20search.webp" title="Agno Documentation answer with AI" alt="" loading="lazy" />
&lt;figcaption>Agno Documentation answer with AI&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="../img/AI%20Documentation%20AI%20Search%20Response.webp" title="Agno Documentation answer with AI response" alt="" loading="lazy" />
&lt;figcaption>Agno Documentation answer with AI response&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>It&amp;rsquo;s not super robust but for our use-case is good enough:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">agent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Agent&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">model&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">OpenRouter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;openrouter/optimus-alpha&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;You are an SEO specialist who generates SEO optimised metadata&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response_model&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">SEOPage&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exponential_backoff&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">retries&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>It&amp;rsquo;s still not perfect, sometimes returns weird keywords, and does sometime return the same keyword/tags more than once but with more tweaking, additional code checks and finding the optimal model for this task, it will help generate SEO metadata for the site&amp;rsquo;s pages (especially pages that I&amp;rsquo;m not too concerned about like the &lt;a href="https://fyx.me/bazaar" >bazaar&lt;/a> pages).&lt;/p>
&lt;h2>Outcome&lt;span class="hx-absolute -hx-mt-20" id="outcome">&lt;/span>
&lt;a href="#outcome" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>As an example, here is the SEO description and tags generated for the &lt;a href="https://fyx.me/bazaar/computer-science--programming/file-synchronisation/" >file synchronisation&lt;/a> cheatsheet in the bazaar (note the weird CLI parameter used as a tag &amp;ldquo;-avPh&amp;rdquo;):&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="../img/File%20synchronisation%20with%20SEO%20metadata%20tags.webp" title="File Synchronisation markdown file with generated metadata viewed in Obsidian" alt="" loading="lazy" />
&lt;figcaption>File Synchronisation markdown file with generated metadata viewed in Obsidian&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Here&amp;rsquo;s what it looks like on the front-end with the SEO metadata set in the HTML head element:&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="../img/File%20Synchronisation%20HTML%20rendered%20with%20SEO%20metadata.webp" title="File Synchronisation rendered after Hugo generates the HTML page" alt="" loading="lazy" />
&lt;figcaption>File Synchronisation rendered after Hugo generates the HTML page&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Honestly, pleasantly surprised considering this is a page with limited content.&lt;/p>
&lt;h2>Conclusion&lt;span class="hx-absolute -hx-mt-20" id="conclusion">&lt;/span>
&lt;a href="#conclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Overall, a lot of potential and in my opinion some good use cases for AI. Still quite a bit of work to do to optimise everything, improve error handling and make it generally more robust but great outcome as a Proof-of-Concept.&lt;/p>
&lt;p>Here&amp;rsquo;s the metadata it generated for this post:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>~/websites/fyx.me &amp;gt; python3 seo-generator/fieldsgen.py content/minis/AI\ SEO\ generation.md
[!] Model : google/gemini-2.5-pro-exp-03-25:free
Title : Leveraging AI to Automate SEO Metadata Generation for Web Content
Desc. : Explore how AI, specifically LLMs accessed via platforms like openrouter.ai and frameworks like Agno, can automate SEO metadata generation for Hugo websites. Learn about the process, tools, challenges, and potential of integrating AI into your deployment workflow.
Tags : [&amp;#39;AI&amp;#39;, &amp;#39;Artificial Intelligence&amp;#39;, &amp;#39;SEO&amp;#39;, &amp;#39;Search Engine Optimization&amp;#39;, &amp;#39;Metadata Generation&amp;#39;, &amp;#39;LLM&amp;#39;, &amp;#39;Large Language Models&amp;#39;, &amp;#39;openrouter.ai&amp;#39;, &amp;#39;Agno&amp;#39;, &amp;#39;Python&amp;#39;, &amp;#39;Automation&amp;#39;, &amp;#39;Hugo&amp;#39;, &amp;#39;Static Site Generator&amp;#39;, &amp;#39;API Integration&amp;#39;, &amp;#39;Workflow Automation&amp;#39;, &amp;#39;Structured Output&amp;#39;, &amp;#39;SEO Tools&amp;#39;]&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Lastly, I think AI in general is a great tool to help in speeding up workflows but as always it works even better when you validate/approve what it does. In this case review the metadata it generates and tweak it slightly.&lt;/p></description></item></channel></rss>